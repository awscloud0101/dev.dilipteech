@model AsteriskBrowserAL.Models.EmployerContributionData
@{
    ViewBag.Title = "EmployerContributionE";
}
@section BreadCrumb{

    <ul class="breadcrumb">
        <li>
            <i class="menu-icon fa fa-list"></i>
            Setting
        </li>
        <li>
            <i class=""></i>
            HR
        </li>
        <li class="active">Employee Contribution</li>
    </ul><!-- /.breadcrumb -->
}




<style>
    .required:first-letter {
        color: red;
        font-weight: bold;
    }
</style>

<section class="content">


    
            @using (Html.BeginForm("EmployerContributionE", "SeHR", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                <span style="color:red;font-weight:bold;">@Html.ValidationMessage("EmployerContribution")</span>


                <div class="page-header">
                    <br />
                    <h1>
                        Employer Contribution
                        <small style="float:right;">
                            @Html.ActionLink("Back to details", "EmployerContribution", new { CategoryId =Model.EmployerContributionId })
                        </small>
                    </h1>
                </div><!-- /.page-header -->
                <div class="box">

                    <div class="box-header">
                        <h3 class="box-title col-xs-11"></h3>

                    </div><!-- /.box-header -->
                    <!-- form start -->
                    <form class="form-horizontal" role="form">
                       
                            @Html.HiddenFor(model => model.EmployerContributionId)
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*Contribution To", new { @class = "required" })</label>

                                <div class="col-sm-3">
                                    @Html.DropDownListFor(model => model.PayrollCategoryComponentsId, new SelectList(Model.ListPayrollComponents, "PayrollCategoryComponentsId", "CategoryName"), "--- Select ---", new { @class = "form-control" })
                                </div>

                                <div class="col-sm-3" style="display:none;" id="nameNull">
                                    <label style="color:red;font-weight:bold;">  Please Enter Contribution Name </label>
                                </div>


                            </div>

                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*Percentage (%)", new { @class = "required" })</label>

                                <div class="col-sm-3">
                                    @Html.TextBoxFor(model => model.Percentage, new { @class = "form-control allownumericwithdecimal", onkeyup = "this.value = minmax(this.value, 0, 100)" })
                                </div>

                                <div class="col-sm-3" style="display:none;" id="percentagenull">
                                    <label style="color:red;font-weight:bold;">Please Enter Percentage value </label>
                                </div>


                            </div>

                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*Percentage On", new { @class = "required" })</label>
                                <div class="col-sm-3">
                                    @Html.DropDownListFor(model => model.PercentageOfComponentId, new SelectList(Model.ListPayrollComponents, "PayrollCategoryComponentsId", "CategoryName"), "--- Select ---", new { @class = "form-control" })
                                </div>

                                <div class="col-sm-3" style="display:none;" id="vPercentageOf">
                                    <label style="color:red;font-weight:bold;">  Please select Payroll Component</label>
                                </div>
                                <br />
                                <br/>
                             
                                <div class="clearfix form-actions">
                                    <div class="col-md-offset-3 col-md-9">
                                        <button class="btn btn-success btn-sm" onclick="return ValidateForm();" type="submit">
                                            <i class="ace-icon fa fa-check bigger-50"></i>
                                           Save
                                        </button>

                                        &nbsp; &nbsp; &nbsp;
                                        <button class="btn btn-sm" type="reset">
                                            <i class="ace-icon fa fa-undo bigger-50"></i>
                                            Reset
                                        </button>
                                    </div>
                                    </div>
                                </div>

                    </form>
                   
                </div>

            
       
            }

            <input type="hidden" id="count" name="count" value="0" />
        </section>

        <script type="text/javascript">
            function ValidateForm() {

                var bIsValid = true;

                var ContributionName = $('#PayrollCategoryComponentsId').val();
                var PercentageValue = $('#Percentage').val();
                var PercentageOf = $('#PercentageOfComponentId').val();

                if (ContributionName < 1 || ContributionName == undefined) {
                    $('#nameNull').show();
                    bIsValid = false;
                }
                if (PercentageValue == "" || PercentageValue == undefined) {
                    bIsValid = false;
                    $('#percentagenull').show();

                }
                if (PercentageOf < 0 || PercentageOf == undefined) {
                    bIsValid = false;
                    $('#vPercentageOf').show();
                }

                return bIsValid;
            }


            $('#PayrollCategoryComponentsId').focus(function () {
                $('#nameNull').hide();
            });
            $('#Percentage').focus(function () {
                $('#percentagenull').hide();
            });
            $('#PercentageOfComponentId').focus(function () {
                $('#vPercentageOf').hide();
            });

            function isNumberKey(event) {
                document.getElementById('PercentageValue').onkeypress = function (e) {
                    if (e.keyCode === 46 && this.value.split('.').length === 2) {
                        return false;
                    }
                    if (this.value > 100) {
                        return false;
                    }
                }
            }

            function minmax(value, min, max) {
                debugger
                if (parseFloat(value) < min || isNaN(value))
                    return 0;
                else if (parseFloat(value) > max)
                    return 100;
                else return value;
            }

            $(".allownumericwithdecimal").on("keypress keyup", function (event) {
                debugger
                //this.value = this.value.replace(/[^0-9\.]/g,'');
                $(this).val($(this).val().replace(/[^0-9\.]/g, ''));
                if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                    event.preventDefault();
                }
            });
        </script>
