
@model AsteriskBrowserAL.Models.ExaminationResultsData

@{
    ViewBag.Title = "IC Marks Entry Report";
}


@section BreadCrumb{

    <ul class="breadcrumb">
        <li>
            <i class="menu-icon fa fa-database"></i>
            Reports
        </li>
        <li>
            <i class=""></i>
            Academics
        </li>
        <li class="active">IC Marks Entry Report</li>
    </ul><!-- /.breadcrumb -->
}


<section class="content">
    <br />


    <div class="row">
        <div class=col-xs-12>
            @using (Html.BeginForm("ExcelICMarksEntryReportDT", "AReports", FormMethod.Post))
            {
                if (null != Model)
                {
                    <input type="hidden" id="IsCentral" value="@Model.IsCentral" name="IsCentral" />
                    <span style="color:red;" id="Validation"></span>
                    <div class="widget-box">
                        @*<div class="box-header">
                                <h3 class="box-title">IC Marks Entry Report</h3>

                                <input class="btn btn-primary pull-right" type="button" style="width:80px;" name="ViewData" id="ViewData" value="View Data" onclick="return submitForm();">
                            </div>*@

                        <div class="widget-header widget-header-flat widget-header-small">
                            <h5 class="widget-title">
                                IC Marks Entry Report
                            </h5>
                            <div class="widget-toolbar no-border">
                                <div class="inline action-buttons">
                                    <a class="btn btn-info btn-minier P2" id="ViewData" style="margin-bottom:8px" onclick="return submitForm();">View Data</a>

                                </div>
                            </div>


                        </div>
                        <div class="widget-body">
                            <div class="widget-main">

                                @if (Model.IsCentral)
                                {
                                    <div class="row">
                                        <div class="col-xs-12">
                                            <div class="col-xs-6">
                                                <label class="col-xs-4">Division</label>
                                                <div class="col-xs-6">
                                                    @Html.DropDownListFor(model => model.DivisionId, new SelectList(Model.lstDivision, "DivisionId", "DivisionName"), new { @class = "form-control", id = "DivisionId" })
                                                </div>
                                            </div>

                                            <div class="col-xs-6">
                                                <label class="col-xs-4">Branch</label>
                                                <div class="col-xs-6">
                                                    <select id="BranchId" name="SubscriptionId" style="width:240px;" class="form-control"></select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <br />

                                }
                                else
                                {
                                    <input type="hidden" id="BranchId" name="SubscriptionId" value="@Model.BranchId" />
                                }


                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="col-sm-6">
                                            <label class="col-sm-4">Class</label>
                                            <div class="col-sm-6">
                                                <select id="ClassNumberId" name="ClassNumberId" class="form-control"></select>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <label class="col-sm-4">Category</label>
                                            <div class="col-sm-6">
                                                @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.lstICCategory, "CategoryId", "CategoryName"), "--Select--", new { @class = "form-control", id = "CategoryId" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />

                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="col-sm-6">
                                            <label class="col-sm-4">Subjects</label>
                                            <div class="col-sm-6">
                                                @Html.DropDownListFor(model => model.SubjectId, new SelectList(Model.lstSubjects, "SubjectId", "SubjectName"), "--Select--", new { @class = "form-control", id = "SubjectId" })
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <label class="col-sm-4 control-label no-padding-right" for="form-field-1">Exam Date</label>
                                            <div class="col-sm-6">
                                                <select id="ExamDate" name="ExamDate" class="form-control"></select>
                                            </div>
                                        </div>
                                    </div>
                                </div>



                            </div>
                        </div>

                    </div>

                }

                <div id="ICMarksReportData"></div>

            }
        </div>
    </div>

</section>
@Html.Action("DatePickerScripts", "Base")

<script type="text/javascript">

    var status = 0;
    var DisplayValidation = "";

    $(document).ready(function () {
        var IsCentral = $('#IsCentral').val();

        if (IsCentral != "value") {
            LoadClassDropdown();
        }
    })

    $('#SubjectId').change(function () {
        $("#ICMarksReportData").html("");
        GetExamDates();
    });

    $('#CategoryId').change(function () {
        $("#ICMarksReportData").html("");
        GetExamDates();
    })


    function GetExamDates() {
        var SubjectId = $('#SubjectId').val();
        var CategoryId = $('#CategoryId').val();

        $('#ExamDate').children().remove();

        if (SubjectId > 0 && CategoryId > 0) {
            $.ajax({

                url: '/AExamination/GetICExamDates',
                data: { CategoryId: CategoryId, SubjectId: SubjectId },
                success: function (data) {

                    var ExamDateItems = $('#ExamDate');

                    ExamDateItems.children().remove();

                    ExamDateItems.append($("<option>").val("").text("--- Select ---"));

                    $.each(data, function (i, record) {

                        ExamDateItems.append($("<option>").val(record.strExamDate).text(record.DisplayDate));
                    });

                    $('#ExamDate').append(ExamDateItems);
                },
                aync: false
            });
        }
    }

    $('#DivisionId').change(function () {
        $("#ICMarksReportData").html("");
        var DivisionId = $('#DivisionId').val();
        if (DivisionId != 0) {
            $.ajax({

                url: '/AReports/GetBranchesByDivisionIdMarksEntryReport',
                data: { DivisionId: DivisionId },
                success: function (data) {

                    var BranchItems = $('#BranchId');

                    BranchItems.children().remove();

                    BranchItems.append($("<option>").val("null").text("--- Select ---"));

                    if (data.length > 0) {
                        BranchItems.append($("<option>").val("-1").text("All"));
                    }

                    $.each(data, function (i, record) {
                        BranchItems.append($("<option>").val(record.SubscriptionId).text(record.Institute));
                    });

                    $('#BranchId').append(BranchItems);

                },
                aync: false
            });
        }
    });

    $('#BranchId').change(function () {
        $("#ICMarksReportData").html("");
        LoadClassDropdown();
    });

    function LoadClassDropdown() {

        var IsCentral = $('#IsCentral').val();

        var Branchid = $("#BranchId").val();
        if (Branchid > 0 || Branchid == -1 || IsCentral != "value") {
            $.ajax({
                url: '/AReports/GetClassNumberForIcMarksReport',
                success: function (result) {
                    var ClassNumberItems = $("#ClassNumberId")
                    ClassNumberItems.children().remove();
                    ClassNumberItems.append($("<option>").val("0").text("---Select ---"))
                    $.each(result, function (e, record) {
                        ClassNumberItems.append($("<option>").val(record.ClassNumber).text(record.ClassNumberDisplay))
                    });

                    $("#ClassNumberId").append(ClassNumberItems);
                },
                async: false
            })
        }
    }

    function getFormattedDate(input) {
        var pattern = /(.*?)\/(.*?)\/(.*?)$/;
        var result = input.replace(pattern, function (match, p1, p2, p3) {
            var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            return (p2 < 10 ? "0" + p2 : p2) + " - " + months[(p1 - 1)] + " - " + p3;
        });
        return result;
    }


    $('#ViewData').change(function () {
        $("#ICMarksReportData").html("");
        debugger
        GetStudentICMarksReportStudentwise();
    })




    function GetStudentICMarksReportStudentwise() {
        var DivisionId = $('#DivisionId').val();
        var Examdate = $('#ExamDate').val()
        var Branchid = $("#BranchId").val()
        var ClassNumberId = $('#ClassNumberId').val()
        var CategoryId = $('#CategoryId').val()
        var SubjectId = $('#SubjectId').val()

        if (Examdate != null || Examdate != "" || Examdate == undefined) {

            $('#imagemodal').show();

            $.ajax({
                url: '/AReports/GetStudentICMarksReportStudentwise',
                data: { nDivisionId: DivisionId, nBranchId: Branchid, nClassNumberId: ClassNumberId, nCategoryId: CategoryId, nSubjectId: SubjectId, nExamdate: Examdate },
                success: function (Data) {
                    $('#imagemodal').hide();
                    $("#ICMarksReportData").html(Data);
                },
            });

        }
        else {
            $("#ICMarksReportData").html("");
        }

    }


    function submitForm() {
        debugger
        DisplayValidation = "";
        DisplayValidation = "Please fill the mandatory fileds : ";

        var Validation = ValidateICMarksEntryReport();

        if (Validation == false) {

            document.getElementById("Validation").innerHTML = DisplayValidation;
        }
        else {
            document.getElementById("Validation").innerHTML = "";

            GetStudentICMarksReportStudentwise();
        }
    }

    function ValidateICMarksEntryReport() {

        var valid = true;

        var IsCentral = $('#IsCentral').val();

        if (IsCentral == "value") {
            var Division = $('#DivisionId').val();

            if (Division == 0) {
                valid = false;
                DisplayValidation += "Division, ";
            }

            var BranchId = $('#BranchId').val();
            if (BranchId == null || BranchId == "null" || BranchId == 0) {
                valid = false;
                DisplayValidation += "Branch, ";
            }
        }
        var ClassId = $('#ClassNumberId').val();
        if (ClassId < 0) {
            valid = false;
            DisplayValidation += "Class, ";
        }
        var CategoryId = $('#CategoryId').val();
        if (CategoryId < 0) {
            valid = false;
            DisplayValidation += "Category, ";
        }
        var SubjectId = $('#SubjectId').val();
        if (SubjectId < 0) {
            valid = false;
            DisplayValidation += "Subject ";
        }
        var ExamDate = $('#ExamDate').val();
        if (ExamDate == null || ExamDate == "" || ExamDate == undefined) {
            valid = false;
            DisplayValidation += "Exam Date ";
        }

        return valid;

    };

</script>

