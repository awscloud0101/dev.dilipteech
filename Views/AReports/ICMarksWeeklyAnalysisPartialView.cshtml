@model List<AsteriskBrowserAL.Models.ExaminationResultsData>
@using AsteriskBrowserAL.Helpers;

@{
    List<AsteriskBrowserAL.Models.ExaminationResultsData> lstExamPapers = new List<AsteriskBrowserAL.Models.ExaminationResultsData>();
    if (null != Model && Model.Count() > 0)
    {
        var data = Model.FirstOrDefault();

        if (null != data)
        {
            lstExamPapers = data.lstExamResultsPaperWise.ToList();
        }
    }

    bool bIsCostal = AsteriskBrowserAL.Helpers.Utility.IsCoastal();

    double dTotalMaxMarks = 0;
    double dTotalScoredMarks = 0;
    double dAvg = 0;
}

<div class="hr hr-18 dotted hr-double"></div>
@if (lstExamPapers.Count() > 0)
{
    if (null != Model && Model.Count() > 0)
    {
        int nsno = 1;

        <div class="table-header">
            IC Marks Analysis
            <div style="float:right">
                <input type="submit" class="btn btn-info btn-minier" name="btnExport" id="btnExport" style="min-width:160Px" value="Export to Excel" />
            </div>
        </div>
        <table class="table tbhover table-striped table-bordered dynamic-table" style="font-size:14px;">
            <thead>
                <tr>
                    <th>
                       S.No.
                    </th>
                    <th>
                        @Html.DisplayName("Student Name")
                    </th>
                    @if (null != lstExamPapers)
                    {
                        foreach (var type in lstExamPapers)
                        {
                            <th>
                                @type.PaperName
                            </th>
                        }
                    }

                    <th>
                        Max Marks
                    </th>
                    <th>
                        Scored Marks
                    </th>
                    <th>Avg</th>
                    <th>Rank</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count(); i++)
                    {
                    <tr>
                        <td>
                            @(nsno++)
                        </td>
                        <td>
                            @Model.ElementAt(i).DisplayName
                        </td>

                        @if (Model.ElementAt(i).lstExamResultsPaperWise.Count() > 0)
                        {
                            for (int j = 0; j < Model.ElementAt(i).lstExamResultsPaperWise.Count(); j++)
                            {
                                <td>
                                    @Model.ElementAt(i).lstExamResultsPaperWise.ElementAt(j).DisplayMarksScored
                                </td>
                            }


                            var data = Model.ElementAt(i).lstExamResultsPaperWise.Where(s => s.DisplayMarksScored != "-").ToList();

                            if (data.Count() > 0)
                            {
                                dTotalMaxMarks = data.Sum(m => m.MaxMarks.HasValue ? m.MaxMarks.Value : 0);
                            }


                            var scored = data.Where(d => Utility.IsDouble(d.DisplayMarksScored)).ToList();

                            dTotalScoredMarks = scored.Sum(c => Convert.ToDouble(c.DisplayMarksScored));

                            dAvg = Math.Round(Convert.ToDouble((dTotalScoredMarks / dTotalMaxMarks) * 100), 1);
                        }

                        <td>
                            @Model.ElementAt(i).MaxMarks
                        </td>
                        <td>
                            @Model.ElementAt(i).MarksScored
                        </td>
                        <td>
                            @Model.ElementAt(i).AvgMarks
                        </td>
                        <td>
                            @Model.ElementAt(i).Rank
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <span style="color: red;"><b>Data not available to display</b></span>
    }
}
else
{
    <span style="color: red;"><b>Data not available to display</b></span>
}

@Html.Action("DataTableScripts", "Base")

<script>
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode

        if (charCode == 46 || charCode == 65)
            return true;

        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
</script>
