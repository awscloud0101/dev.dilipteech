@model AsteriskBrowserAL.Models.ExaminationResultsData

@{

    int[] nStudentAry;
    List<AsteriskBrowserAL.Models.ExaminationResultsData> lstExamPapers = new List<AsteriskBrowserAL.Models.ExaminationResultsData>();
    if (null != Model && null != Model.lstExamResults && Model.lstExamResults.Count() > 0)
    {
        var data = Model.lstExamResults.FirstOrDefault();

        if (null != data)
        {
            lstExamPapers = data.lstExamResultsPaperWise.ToList();
        }
    }

    string UserRole = AsteriskBrowserAL.Helpers.Utility.GetUserRole();

    List<IGrouping<string, AsteriskBrowserAL.Models.ExaminationResultsData>> GroupedData = new List<IGrouping<string, AsteriskBrowserAL.Models.ExaminationResultsData>>();
    if (null != Model)
    {

        GroupedData = Model.lstExamResults.GroupBy(p => p.BranchName).ToList();
    }


    AsteriskGMSEntities _db = null;
    AsteriskGMSEntities _dbCentral = new AsteriskGMSEntities(AsteriskBrowserAL.Helpers.Utility.GetCentralDatabase());


    if (null != Model)
    {
        var branch = _dbCentral.Branch.FirstOrDefault(b => b.SubscriptionId == Model.BranchId);

        if (null != branch)
        {
            _db = new AsteriskGMSEntities(branch.DataBaseName);
        }
    }

    int nPaperId = 0;
    int nEntryCount = 0;
    int nNonEntryCount = 0;
    int nAbsentCount = 0;


    List<AsteriskBrowserAL.Models.ExaminationResultsData> lstStudentsWithMarks = new List<AsteriskBrowserAL.Models.ExaminationResultsData>();
    //if (null != Model )
    //{
    //    var classnumber = _dbCentral.ClassNumbers.FirstOrDefault(c => c.ClassNumbersId == Model.ClassNumber);

    //        if(null!= classnumber)
    //        {
    //            lstStudentsWithMarks = classnumber.ClassNumberDisplay.ToList();
    //        }
    //}
    bool bIsCoastal = AsteriskBrowserAL.Helpers.Utility.IsCoastal();
}
<div class="hr hr-18 dotted hr-double"></div>

@if (lstExamPapers.Count() > 0)
{
    if (null != Model && null != Model.lstExamResults && Model.lstExamResults.Count() > 0)
    {
        int nsno = 1;

        <div class="table-header">

            Records Found (@Model.lstExamResults.Count)

            <div style="float:right">
                <button class="btn btn-info btn-xs P2" id="btnExport">
                    <i class="ace-icon fa fa-share bigger-180"></i>

                </button>
            </div>
        </div>
        <div style="overflow:auto;height:400px">
            <table class="table tbhover table-striped table-bordered dynamic-table" style="font-size:14px;">
                <thead>
                    <tr>
                        <th>
                           S.No.
                        </th>
                        @if (Model.IsCentral)
                        {
                            <th>
                                @Html.DisplayName("Branch Name")
                            </th>
                        }
                        <th>
                            @Html.DisplayName("Student Name")
                        </th>
                        <th>
                            @Html.DisplayName("Roll Number")
                        </th>
                        @if (bIsCoastal)
                        {
                            <th>
                                @Html.DisplayName("Registration Number")
                            </th>
                        }
                        <th>
                            @Html.DisplayName("Legacy Number")
                        </th>


                        @if (null != lstExamPapers)
                        {
                            foreach (var type in lstExamPapers)
                            {
                                <th>
                                    @type.PaperName
                                </th>
                            }
                        }
                    </tr>

                </thead>

                <tbody>

                    @for (int i = 0; i < Model.lstExamResults.Count(); i++)
                    {
                        <tr>
                            <td>
                                @(nsno++)
                            </td>
                            @if (Model.IsCentral)
                            {
                                <td>
                                    @Model.lstExamResults.ElementAt(i).BranchName
                                </td>
                            }
                            <td>
                                @Model.lstExamResults.ElementAt(i).DisplayName
                            </td>
                            <td>
                                @Model.lstExamResults.ElementAt(i).RollNumber
                            </td>
                            @if (bIsCoastal)
                            {
                                <td>
                                    @Model.lstExamResults.ElementAt(i).OMRNumber
                                </td>
                            }
                            <td>
                                @Model.lstExamResults.ElementAt(i).LegacyNumber
                            </td>

                            @if (Model.lstExamResults.ElementAt(i).lstExamResultsPaperWise.Count() > 0)
                            {
                                for (int j = 0; j < Model.lstExamResults.ElementAt(i).lstExamResultsPaperWise.Count(); j++)
                                {
                                    <td>@Model.lstExamResults.ElementAt(i).lstExamResultsPaperWise.ElementAt(j).DisplayMarksScored</td>
                                }
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        if (null != Model.lstMarksEntryStatus && Model.lstMarksEntryStatus.Count() > 0)
        {
            var groupByBranch = Model.lstMarksEntryStatus.GroupBy(c => c.BranchName);

            foreach (var b in groupByBranch)
            {
                var GroupByPaper = b.GroupBy(s => s.PaperName);
                <br />
                <div class="widget-box">

                    <div class="table-header">
                        @b.Key
                    </div>

                    <div class="widget-body">
                        <div class="widget-main">

                            @foreach (var g in GroupByPaper)
                            {
                                var groupBySection = g.GroupBy(p => p.SectionName).ToList();

                                var Paper = g.FirstOrDefault();

                                if (null != Paper)
                                {
                                    nPaperId = Paper.ExaminationPaperId.HasValue ? Paper.ExaminationPaperId.Value : 0;
                                }

                                <input type="hidden" value="@Model.lstMarksEntryStatus.FirstOrDefault().ClassNumber" />
                                <br />

                                <div class="widget-box">

                                    <div class="widget-header widget-header-flat widget-header-small">
                                        <h5 class="widget-title">
                                            @g.Key
                                        </h5>
                                    </div>

                                    <div class="widget-body">
                                        <div class="widget-main">

                                            <table class="table tbhover table-striped table-bordered" style="font-size:14px;">
                                                <thead>
                                                    <tr>
                                                        <th>
                                                            Section Name
                                                        </th>
                                                        <th>
                                                            Entry
                                                        </th>
                                                        <th>
                                                            No Entry
                                                        </th>

                                                        <th>
                                                            Absent
                                                        </th>
                                                    </tr>

                                                </thead>
                                                <tbody>
                                                    @foreach (var c in groupBySection)
                                                    {
                                                    <tr>
                                                        <td>
                                                            @c.Key
                                                        </td>
                                                        <td>
                                                            @{
                                                                    nEntryCount = c.Where(p => AsteriskBrowserAL.Helpers.Utility.IsDouble(p.DisplayMarksScored) == true).Count();
                                                            }

                                                            @if (nEntryCount > 0)
                                                                {
                                                                <a href=@Url.Action("ICMarksEntryReportStatus", "AReports", new { Status = "E", PaperId = nPaperId, SubscriptionId = c.FirstOrDefault().BranchId,nCategoryId = Model.CategoryId, nSectionId = c.FirstOrDefault().SectionId, dtExamDate = Model.ExamDate})>
                                                                    @nEntryCount
                                                                </a>
                                                                }
                                                                else
                                                                {
                                                                @nEntryCount
                                                                }
                                                        </td>
                                                        <td>
                                                            @{
                                                                    nNonEntryCount = c.Where(n => !(AsteriskBrowserAL.Helpers.Utility.IsDouble(n.DisplayMarksScored) || n.DisplayMarksScored == "A")).Count();
                                                            }

                                                            @if (nNonEntryCount > 0)
                                                                {
                                                                <a href=@Url.Action("ICMarksEntryReportStatus", "AReports", new { Status = "NE", PaperId = nPaperId, SubscriptionId = c.FirstOrDefault().BranchId, ClassNumberId = Model.ClassNumber,nCategoryId = Model.CategoryId, nSectionId = c.FirstOrDefault().SectionId, dtExamDate = Model.ExamDate })>
                                                                    @nNonEntryCount
                                                                </a>
                                                                }
                                                                else
                                                                {
                                                                @nNonEntryCount
                                                                }

                                                        </td>

                                                        <td>

                                                            @if (nAbsentCount > 0)
                                                                {
                                                                <a href=@Url.Action("ICMarksEntryReportStatus", "AReports", new { Status = "A", PaperId = nPaperId, SubscriptionId = c.FirstOrDefault().BranchId, nCategoryId = Model.CategoryId, nSectionId = c.FirstOrDefault().SectionId, dtExamDate = Model.ExamDate })>
                                                                    @c.Where(p => p.DisplayMarksScored == "A").Count()
                                                                </a>
                                                                }
                                                                else
                                                                {
                                                                @nAbsentCount
                                                                }


                                                        </td>
                                                    </tr>
                                                                    }

                                                </tbody>


                                            </table>
                                        </div>
                                    </div>
                                </div>
                                                                }

                        </div>
                    </div>
                </div>

                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <span style="color: red;"><b>No exam papers available to display</b></span>
                                                                }


@Html.Action("DataTableScripts", "Base", new { IsPaging = false })
<script>

    function submitform() {
        $.ajax({
            url: '/AReports/ICMarksEntryReport',
            data: {},
            success: function (result) {
            }
        })
    };

    //$('#btnExport').click(function () {
    //    debugger
    //    window.location.href = "/AReports/ExcelICMarksEntryReportDT"
    //    var Data = $("#tbICMarksEntryReportData").html();
    //});

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode

        if (charCode == 46 || charCode == 65)
            return true;

        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
</script>







