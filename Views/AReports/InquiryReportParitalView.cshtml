@model AsteriskBrowserAL.Models.InquiryViewModel
@{
    List<IGrouping<string, AsteriskBrowserAL.Models.InquiryViewModel>> GroupedData = new List<IGrouping<string, AsteriskBrowserAL.Models.InquiryViewModel>>();
    int sno = 1;
    if (null != Model)
    {

        GroupedData = Model.StudentInquiryReportDetails.GroupBy(p => p.BranchName).ToList();
    }
}

<style>
    .red {
        color: red;
    }

    .hideScrolling {
        overflow: hidden;
        height: 450px;
    }

        .hideScrolling:hover {
            overflow: auto;
        }
</style>

<div class="hr hr-18 dotted hr-double"></div>


@if (null != Model)
{
    if (null != Model.StudentInquiryReportDetails && Model.StudentInquiryReportDetails.Count() > 0)
    {

        <div class="table-header">
            Records Found (@Model.StudentInquiryReportDetails.Count())
            <div style="float:right">
                <button class="btn btn-info btn-xs" onclick="PrintElem('#mydiv')">
                    <i class="ace-icon fa fa-print bigger-180"></i>
                </button>
                <button class="btn btn-info btn-xs" id="btnExport">
                    <i class="ace-icon fa fa-share bigger-180"></i>
                </button>

            </div>
        </div>

    <table id="InquiryDataReport" class="table tbhover table-striped table-bordered dynamic-table" style="font-size:14px;">
        <thead>
            <tr>
                <th>
                   S.No.
                </th>
                <th>
                    @Html.DisplayName("Branch Name")
                </th>
                <th>
                    @Html.DisplayName("Inquiry No")
                </th>
                <th>
                    @Html.DisplayName("Student Name")
                </th>

                <th>
                    @Html.DisplayName("Date of Inquiry")
                </th>
                <th>
                    @Html.DisplayName("Reference Name")
                </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.StudentInquiryReportDetails)
            {
                <tr>
                    <td>
                        @(sno++)
                    </td>
                    <td>
                        @item.BranchName
                    </td>
                    <td>
                        @item.InquiryNumber
                    </td>
                    <td>
                        @item.FirstName
                    </td>
                    <td>
                        @item.InquiryDate
                    </td>
                    <td>
                        @item.ReferenceName
                    </td>
                </tr>
            }

        </tbody>
    </table>


    }
    else
    {
        <div style="color:red;font-weight:bold">Data not available to display</div>
    }
}
else
{
    <div style="color:red;font-weight:bold">Data not available to display</div>
}
@Html.Action("DataTableScripts", "Base")


<body>
    <div id="mydiv" style="display:none">

        @if (null != Model)
        {
            if (null != Model.StudentInquiryReportDetails && Model.StudentInquiryReportDetails.Count() > 0)
            {
                int nSno = 1;

                <div class="row">
                    <div class="col-xs-12">
                        <img class=" col-xs-11" id="avatar" width="50" height="43" src="@Model.InstituteDetails.InstituteLogo" style="margin-bottom:-1.5em;" />
                        <b style="font-weight:bold; margin-left:0.3em; font-size:20px; font-family:'Segoe UI'">@Model.InstituteDetails.InstituteName</b>
                    </div>
                    <div style="margin-left:3.7em; font-family:'Segoe UI'"><b>@Model.InstituteDetails.InstituteAddress</b></div>
                    <br />

                    <hr style="width:100%; margin-bottom:-0.5em" />
                    <hr style="width:100%;" />
                    <div align="center" style="font:12%; font-family:'Segoe UI'"><b>Inquiry Report (@((Model.FromDate.HasValue && Model.ToDate.HasValue) ? (Model.FromDate.Value.ToString("dd-MMM-yyyy") + " - " + Model.ToDate.Value.ToString("dd-MMM-yyyy")) : "")) </b></div>
                    <hr style="width:100%;" />

                    @*@foreach (var g in GroupedData)
                    {
                        <hr style="width:100%; margin-top:-0.5em" />

                        <div align="left" style="font-weight:bold; margin-left:0.4em; font-family:'Segoe UI'; font-size:14px;"><b>@g.Key</b></div>
                        <hr style="width:100%;" />
                    }*@

                    <div class="col-xs-12 box-body table-responsive">
                        <table class="table table-hover" rules="rows" cellpadding="5" style="width:675px; font-size:12px;">

                            <tbody>
                                <tr style="font-size:13px; font-family:'Segoe UI'; font-weight:bold; text-align:left;">
                                    <th>
                                       S.No.
                                    </th>
                                    <th>
                                        @Html.DisplayName("Branch Name")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Inquiry No")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Student Name")
                                    </th>

                                    <th>
                                        @Html.DisplayName("Date of Inquiry")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Reference Name")
                                    </th>
                                </tr>

                            <tbody>
                                @foreach (var item in Model.StudentInquiryReportDetails)
                                {
                                    <tr>
                                        <td>
                                            @(sno++)
                                        </td>
                                        <td>
                                            @item.BranchName
                                        </td>
                                        <td>
                                            @item.InquiryNumber
                                        </td>
                                        <td>
                                            @item.FirstName
                                        </td>
                                        <td>
                                            @item.InquiryDate
                                        </td>
                                        <td>
                                            @item.ReferenceName
                                        </td>
                                    </tr>
                                }

                            </tbody>

                        </table>
                    </div>



                </div>
            }

        }


    </div>
</body>



<script type="text/javascript">
    function PrintElem(elem) {
        Popup($(elem).html());
    }

    function Popup(data) {
        var mywindow = window.open('', 'my div', 'height=300,width=600');
        mywindow.document.write('<p></p>');
        mywindow.document.write(data);
        mywindow.document.write('<p></p>');

        mywindow.document.close();
        mywindow.focus();

        mywindow.print();
        mywindow.close();
        return true;
    }


    function submitform() {
        $.ajax({
            url: '/AReports/InquiryReport',
            data: {},
            success: function (result) {
            }
        })
    };

    $('#btnExport').click(function () {
        ExportToExcel("InquiryDataReport")
    });

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode

        if (charCode == 46 || charCode == 65)
            return true;

        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
</script>


