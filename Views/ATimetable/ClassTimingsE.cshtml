@model AsteriskBrowserAL.ClassTimings

@{
    ViewBag.Title = "Edit Class Timings";

    List<SelectListItem> Hours = new List<SelectListItem>()
    {
        new SelectListItem(){Text = "--Hours--", Value = "-1"},
        new SelectListItem(){Text = "00", Value = "00"},
        new SelectListItem(){Text = "01", Value = "01"},
        new SelectListItem(){Text = "02", Value = "02"},
        new SelectListItem(){Text = "03", Value = "03"},
        new SelectListItem(){Text = "04", Value = "04"},
        new SelectListItem(){Text = "05", Value = "05"},
        new SelectListItem(){Text = "06", Value = "06"},
        new SelectListItem(){Text = "07", Value = "07"},
        new SelectListItem(){Text = "08", Value = "08"},
        new SelectListItem(){Text = "09", Value = "09"},
        new SelectListItem(){Text = "10", Value = "10"},
        new SelectListItem(){Text = "11", Value = "11"},
        new SelectListItem(){Text = "12", Value = "12"},
        new SelectListItem(){Text = "13", Value = "13"},
        new SelectListItem(){Text = "14", Value = "14"},
        new SelectListItem(){Text = "15", Value = "15"},
        new SelectListItem(){Text = "16", Value = "16"},
        new SelectListItem(){Text = "17", Value = "17"},
        new SelectListItem(){Text = "18", Value = "18"},
        new SelectListItem(){Text = "19", Value = "19"},
        new SelectListItem(){Text = "20", Value = "20"},
        new SelectListItem(){Text = "21", Value = "21"},
        new SelectListItem(){Text = "22", Value = "22"},
        new SelectListItem(){Text = "23", Value = "23"}
    };

    List<SelectListItem> Minutes = new List<SelectListItem>()
    {
        new SelectListItem(){Text = "--Minutes--", Value = "-1"},
        new SelectListItem(){Text = "00", Value = "00"},
        new SelectListItem(){Text = "05", Value = "05"},
        new SelectListItem(){Text = "10", Value = "10"},
        new SelectListItem(){Text = "15", Value = "15"},
        new SelectListItem(){Text = "20", Value = "20"},
        new SelectListItem(){Text = "25", Value = "25"},
        new SelectListItem(){Text = "30", Value = "30"},
        new SelectListItem(){Text = "35", Value = "35"},
        new SelectListItem(){Text = "40", Value = "40"},
        new SelectListItem(){Text = "45", Value = "45"},
        new SelectListItem(){Text = "50", Value = "50"},
        new SelectListItem(){Text = "55", Value = "55"},
    };
}
@section BreadCrumb{

    <ul class="breadcrumb">
        <li>
            <i class="menu-icon fa fa-list"></i>
            Academics
        </li>
        <li>
            <i class=""></i>
            TimeTable
        </li>
        <li class="active">Class Timings</li>
    </ul><!-- /.breadcrumb -->
}




<style>
    .field-validation-error {
        color: red;
        font-weight: bold;
    }
</style>

<section class="content">

    @if (null != Model)
    {
       
        <br />

        <div class="row">
            <div class="col-xs-12">
                <div class="box">

                    <!-- form start -->
                    @using (Html.BeginForm("ClassTimingsE", "ATimetable", FormMethod.Post, new { @class = "form-horizontal"}))
                    {
                        <input type="hidden" id="SubscriptionId" name="SubscriptionId" value="@Model.SubscriptionId" />

                        if (Model.BatchId.HasValue)
                        {
                            <input type="hidden" id="BatchId" name="BatchId" value="@Model.BatchId.Value" />
                        }
                        else
                        {
                            <input type="hidden" id="BatchId" name="BatchId" value="0" />
                        }
                        <div class="page-header">
                            <br />
                            <h1>
                                Class Timings
                                <small style="float:right;">
                                    @Html.ActionLink("Back to details", "ClassTimings",new {nSubscriptionId = @Model.SubscriptionId })
                                </small>
                            </h1>
                        </div><!-- /.page-header -->
                       
                        @Html.HiddenFor(model => model.ClassTimingsId, new { id = "ClassTimingsId" })
                      
                        @Html.ValidationSummary(true)
                        <span style="color: red;">@Html.ValidationMessage("Class Timings")</span>

                        
                        
                        <div class="form-group">
                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Name")</label>

                            <div class="col-sm-5">
                                <div class="col-sm-6">
                                    @Html.TextBoxFor(model => model.ItemName, new { @class = "form-control", @id = "ItemName", placeholder = "Period Name", @style = "width:210px" })
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <span style="color:red;font-weight:bold" id="ItemNameVal"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Start Time")</label>

                            <div class="col-sm-5">
                                @if (string.IsNullOrWhiteSpace(Model.ItemStartTime))
                                {
                                    <div class="col-sm-3">
                                        @Html.DropDownList("ItemStartingHours", new SelectList(Hours, "Value", "Text", new { @class = "form-control", @style = "width:100px" }))
                                    </div>
                                    <div class="col-sm-3">
                                        @Html.DropDownList("ItemStartingMinutes", new SelectList(Minutes, "Value", "Text", new { @class = "form-control", @style = "width:100px" }))
                                    </div>
                                }
                                else
                                {
                                    <div class="col-sm-3">
                                        @Html.DropDownList("ItemStartingHours", new SelectList(Hours, "Value", "Text", Model.ItemStartTime.Substring(0, 2)), new { @class = "form-control", @style = "width:100px" })
                                    </div>
                                    <div class="col-sm-3">
                                        @Html.DropDownList("ItemStartingMinutes", new SelectList(Minutes, "Value", "Text", Model.ItemStartTime.Substring(3, 2)), new { @class = "form-control", @style = "width:100px" })
                                    </div>
                                }

                            </div>

                            <div class="col-sm-3">
                                <span style="color:red;font-weight:bold" id="StartTimeVal"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("End Time")</label>

                            <div class="col-sm-5">
                                @if (string.IsNullOrWhiteSpace(Model.ItemEndTime))
                                {
                                    <div class="col-sm-3">
                                        @Html.DropDownList("ItemEndingHours", new SelectList(Hours, "Value", "Text", new { @class = "form-control", @style = "width:100px" }))
                                    </div>
                                    <div class="col-sm-3">
                                        @Html.DropDownList("ItemEndingMinutes", new SelectList(Minutes, "Value", "Text", new { @class = "form-control", @style = "width:100px" }))
                                    </div>
                                }
                                else
                                {
                                    <div class="col-sm-3">
                                        @Html.DropDownList("ItemEndingHours", new SelectList(Hours, "Value", "Text", Model.ItemEndTime.Substring(0, 2)), new { @class = "form-control", @style = "width:100px" })
                                    </div>
                                    <div class="col-sm-3">
                                        @Html.DropDownList("ItemEndingMinutes", new SelectList(Minutes, "Value", "Text", Model.ItemEndTime.Substring(3, 2)), new { @class = "form-control", @style = "width:100px" })
                                    </div>
                                }

                            </div>

                            <div class="col-sm-3">
                                <span style="color:red;font-weight:bold" id="EndTimeVal"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label no-padding-right"></label>

                            <div class="col-sm-5">
                                <div class="col-sm-6">
                                    @Html.CheckBoxFor(model => model.IsBreak)
                                    <span class="lbl bigger-120">Is Break</span>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                @Html.ValidationMessageFor(model => model.IsBreak)
                            </div>
                        </div>

    <div class="hr hr-18 dotted hr-double"></div>
    <div class="col-md-offset-3 col-md-9">
        <button class="btn btn-success btn-sm" onclick="return subitForm();" type="submit">
            <i class="ace-icon fa fa-check bigger-50"></i>
            Save
        </button>

        &nbsp; &nbsp; &nbsp;
        <button class="btn btn-sm" type="reset">
            <i class="ace-icon fa fa-undo bigger-50"></i>
            Reset
        </button>
    </div>
                    }
                </div>
            </div>

        </div>
    }

</section>


<script >

    function submitForm()
    {
        var validatestatus = validateCT();

        if (validatestatus == false){
            return false
        }
        else {



            return true;
        }
    }

    function validateCT() {
        validate = true;

        var ItemName = $('#ItemName').val();
        var ItemStartingHours = $('#ItemStartingHours').val();
        var ItemStartingMinutes = $('#ItemStartingMinutes').val();
        var ItemEndingHours = $('#ItemEndingHours').val();
        var ItemEndingMinutes = $('#ItemEndingMinutes').val();

        if (ItemName == "") {
            validate = false;
            document.getElementById("ItemNameVal").innerHTML = "Please enter period name";
        }

        if (ItemStartingHours < 0 && ItemStartingMinutes < 0) {
            validate = false;
            document.getElementById("StartTimeVal").innerHTML = "Please select Both hours and Minutes";
        }

        if (ItemEndingHours < 0 && ItemEndingMinutes < 0) {
            validate = false;
            document.getElementById("EndTimeVal").innerHTML = "Please select Both hours and Minutes";
        }

        if (ItemStartingHours != -1) {
            if (ItemStartingMinutes == -1) {
                validate = false;
                document.getElementById("StartTimeVal").innerHTML = "Please select Minutes";
            }
        }

        if (ItemEndingHours != -1) {
            if (ItemEndingMinutes == -1) {
                validate = false;
                document.getElementById("EndTimeVal").innerHTML = "Please select Minutes";
            }
        }

        if (ItemStartingMinutes != -1) {
            if (ItemStartingHours == -1) {
                validate = false;
                document.getElementById("StartTimeVal").innerHTML = "Please select Hours";
            }
        }

        if (ItemEndingMinutes != -1) {
            if (ItemEndingHours == -1) {
                validate = false;
                document.getElementById("EndTimeVal").innerHTML = "Please select Hours";
            }
        }


        if (validate == true)
        {
            var validation = ValidateClassTimings();
            return validation;
        }
        else
        {
            return false;
        }

        function ValidateClassTimings()
        {
            var validation = true;

            jQuery.ajax({
                url: '/ATimetable/ValidateClassTimings',
                data: { SavingType: "Edit", ItemName: ItemName, ClassNumber: $('#ClassNumber').val(), ClassTimingsId: $('#ClassTimingsId').val(),  ItemStartingHours: ItemStartingHours, ItemStartingMinutes: ItemStartingMinutes, ItemEndingHours: ItemEndingHours, ItemEndingMinutes: ItemEndingMinutes },
                success: function (data) {
                    if (data.TimeVal != "" && data.PeriodVal != "") {
                        document.getElementById("EndTimeVal").innerHTML = data.TimeVal;
                        document.getElementById("ItemNameVal").innerHTML = data.PeriodVal;
                        validation = false;
                    }
                    else if (data.TimeVal != "") {
                        document.getElementById("EndTimeVal").innerHTML = data.TimeVal;
                        validation = false;
                    }
                    else if (data.PeriodVal != "") {
                        document.getElementById("ItemNameVal").innerHTML = data.PeriodVal;
                        validation = false;
                    }
                    else {
                        validation = true;
                    }
                },
                async: false

            });

            return validation;
        }
    }

    $("#ItemName").focus(function () {
        document.getElementById("ItemNameVal").innerHTML = "";
    });

    $("#ItemStartingHours").change(function () {
        document.getElementById("StartTimeVal").innerHTML = "";
    });

    $("#ItemStartingMinutes").change(function () {
        document.getElementById("StartTimeVal").innerHTML = "";
    });

    $("#ItemEndingHours").change(function () {
        document.getElementById("EndTimeVal").innerHTML = "";
    });

    $("#ItemEndingMinutes").change(function () {
        document.getElementById("EndTimeVal").innerHTML = "";
    });


</script>



