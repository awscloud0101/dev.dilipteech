@model AsteriskBrowserAL.Models.StaffRegistrationViewModel

@{
    ViewBag.Title = " Registration";

    List<SelectListItem> Year = new List<SelectListItem>()
    {
         new SelectListItem() { Text = "Year", Value = "-1"},
        new SelectListItem() { Text = "0", Value = "0"},
        new SelectListItem(){Text ="1", Value = "1"},
        new SelectListItem(){Text = "2",Value = "2"},
        new SelectListItem(){Text = "3",Value = "3"},
        new SelectListItem(){Text = "4",Value = "4"},
        new SelectListItem(){Text = "5",Value = "5"},
        new SelectListItem(){Text = "6",Value = "6"},
        new SelectListItem(){Text = "7",Value = "7"},
        new SelectListItem(){Text = "8",Value = "8"},
        new SelectListItem(){Text = "9",Value = "9"},
        new SelectListItem(){Text = "10",Value = "10"},
        new SelectListItem(){Text = "11",Value = "11"},
        new SelectListItem(){Text = "12",Value = "12"},
        new SelectListItem(){Text = "13",Value = "13"},
        new SelectListItem(){Text = "14",Value = "14"},
        new SelectListItem(){Text = "15",Value = "15"},
        new SelectListItem(){Text = "16",Value = "16"},
        new SelectListItem(){Text = "17",Value = "17"},
        new SelectListItem(){Text = "18",Value = "18"},
        new SelectListItem(){Text = "19",Value = "19"},
        new SelectListItem(){Text = "20",Value = "20"}

    };

    List<SelectListItem> Month = new List<SelectListItem>()
    {
        new SelectListItem() { Text = "Month", Value = "-1"},
        new SelectListItem() { Text = "0", Value = "0"},
        new SelectListItem(){Text ="1", Value = "1"},
        new SelectListItem(){Text = "2",Value = "2"},
        new SelectListItem(){Text = "3",Value = "3"},
        new SelectListItem(){Text = "4",Value = "4"},
        new SelectListItem(){Text = "5",Value = "5"},
        new SelectListItem(){Text = "6",Value = "6"},
        new SelectListItem(){Text = "7",Value = "7"},
        new SelectListItem(){Text = "8",Value = "8"},
        new SelectListItem(){Text = "9",Value = "9"},
        new SelectListItem(){Text = "10",Value = "10"},
        new SelectListItem(){Text = "11",Value = "11"}
    };


    List<SelectListItem> MaritalStatus = new List<SelectListItem>()
    {
        new SelectListItem() { Text = "--Select--", Value = "0"},
        new SelectListItem() { Text = "Single", Value = "1"},
        new SelectListItem(){Text ="Married", Value = "2"},
        new SelectListItem(){Text = "Divorced",Value = "3"},
    };

    List<SelectListItem> GenderId = new List<SelectListItem>()
    {
        new SelectListItem() { Text = "--Select--", Value = "-1"},
        new SelectListItem() { Text = "Male", Value = "1"},
        new SelectListItem(){Text ="Female", Value = "0"},
    };
    //if (@Model.StaffPhotoId != null)
    //{
    //    var i = @Model.StaffPhotoId;
    //}
    //var j = ViewBag.id;
    //string StaffPhoto1 = string.Empty;
    ////var imgSrc5 = string.Empty;


    //if (Model.StaffPhoto != null)
    //{
    //    StaffPhoto1 = Convert.ToBase64String(Model.StaffPhoto);
    //}
    string StaffPhoto1 = string.Empty;

    //if (StaffPhoto1 != "")
    //{
    //    StaffPhoto1 = Convert.ToBase64String(Model.StaffPhoto);
    //}
    //if (Model.StaffPhoto != null)
    //{
    //    StaffPhoto1 = Convert.ToBase64String(Model.StaffPhoto);
    //}

    string UserRole = AsteriskBrowserAL.Helpers.Utility.GetUserRole();
}



@section BreadCrumb{

    <ul class="breadcrumb">
        <li>
            <i class="menu-icon fa fa-group"></i>
            HR
        </li>
        <li>
            <i class=""></i>
            Enrollment
        </li>
        <li class="active">Employee Details</li>
    </ul><!-- /.breadcrumb -->
}


<style type="text/css">
    .required:first-letter {
        color: red;
        font-weight: bold;
    }
</style>

<link href="~/assets/css/jquery-ui.custom.min.css" rel="stylesheet" />
<script src="~/assets/js/jquery-ui.min.js"></script>

<style type="text/css">
    .ui-autocomplete {
        font-size: 12px;
        cursor: pointer;
        width: 120px;
        height: 120px;
        overflow-y: scroll;
    }
</style>


<!-- Include Select2 CSS -->
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/select2/3.5.0/select2.min.css" />

<!-- CSS to make Select2 fit in with Bootstrap 3.x -->
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/select2/3.5.0/select2-bootstrap.min.css" />

<!-- Include Select2 JS -->
<script src="//cdnjs.cloudflare.com/ajax/libs/select2/3.5.0/select2.min.js"></script>

@Html.Action("DatePickerScripts", "Base")


<!--Main Content-->
<section class="content">
    <div class="row">
        <div class="table-header">
         
                Employee Details
                <small style="float:right;font-weight:bold;" class="textheader">
                    @Html.ActionLink("Back to details", "StaffDetails", new { nDivisionId = Model.DivisionId, nBranchId = Model.BranchId })
                </small>
         
        </div><!-- /.page-header -->
    </div>


    @using (Html.BeginForm("StaffDetailsE", "HREnrollment", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data", MaritalStatus = 0 }))
    {


        <div class="row">
            <div class="col-xs-12">



                <div class="page-header">
                    <h6>
                        <strong>Edit Employee Details</strong>

                        <div style="float:right;margin-right:10px;">
                            <button class="btncustom" name="save" value="Save" type="submit" id="save" onclick="return submitForm();">
                                Save
                            </button>
                        </div>
                    </h6>
                </div>


                <span id="Validation" style="color:red;font-weight:bold"></span>
                <span id="Appointment" style="color:green;font-weight:bold">@Html.ValidationMessage("StaffDetailsE")</span>

            </div>
            @Html.HiddenFor(model => model.StaffId)
            @Html.HiddenFor(model => model.IsProfile)
            @Html.HiddenFor(model => model.BranchId)

        </div>
        <input type="hidden" id="ModelDepartmentId" />
        <input type="hidden" id="ModelCategoryId" />
        <input type="hidden" id="ModelGradeId" />
        <input type="hidden" id="ModelPosition" />
        <input type="hidden" id="ModelNationalityId" />
        <input type="hidden" id="ModelStateId" />
        <input type="hidden" id="ModelBlood" />
        <input type="hidden" id="ModelNationality" />
        <input type="hidden" id="ModelBank" />
       

        <div class="overflowscroll" style="height:400px;overflow-x:hidden;">


            <div class="row">
                <div class="col-xs-12">



                    <div class="widget-box">
                        <div class="widget-header widget-header-flat widget-header-small">
                            <h5 class="widget-title">
                                General Information
                            </h5>
                        </div>
                        <div class="widget-body">
                            <div class="widget-main">
                                <div class="row">
                                    <div class="col-xs-12">
                                        <div class="form-group">

                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Employee Number")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.EmployeeNumber, new { @class = "form-control TextBox", @readonly = "readonly" })
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*Joining Date", new { @class = "required" })</label>

                                            <div class="col-sm-3">
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div id="datepickerVal" class="input-group date">
                                                            @if ((null == Model) || (!Model.JoiningDate.HasValue))
                                                            {
                                                                <input class="form-control" type="text" id="JoiningDate" name="JoiningDate" value="@DateTime.Today.Date.ToShortDateString()" autocomplete="off" readonly="readonly" placeholder="Joining Date" />
                                                                <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                            }
                                                            else
                                                            {
                                                                if (Model.JoiningDate.HasValue)
                                                                {
                                                                    <input class="form-control" type="text" id="JoiningDate" name="JoiningDate" value="@Model.JoiningDate.Value.ToShortDateString()" readonly="readonly" autocomplete="off" />
                                                                    <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                                }
                                                            }
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("*First Name", new { @class = "required" })</label>
                                            @if (Model.JoiningDate == DateTime.Today)
                                            {
                                                <div class="col-sm-3">
                                                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control TextBox", @id = "FirstName", placeholder = "First Name" })
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="col-sm-3">
                                                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control TextBox", @id = "FirstName", placeholder = "First Name", @readonly = "readonly" })
                                                </div>
                                            }
                                            <div class="col-sm-3" style="display:none;" id="Nameval">
                                                <label style="color:red;font-weight:bold;"> Required </label>
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Last Name")</label>
                                            @if (Model.JoiningDate == DateTime.Today)
                                            {
                                                <div class="col-sm-3">
                                                    @Html.TextBoxFor(model => model.LastName, new { @id = "LastName", @class = "form-control", placeholder = "Last Name" })
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="col-sm-3">
                                                    @Html.TextBoxFor(model => model.LastName, new { @id = "LastName", @class = "form-control", placeholder = "Last Name", @readonly = "readonly" })
                                                </div>
                                            }
                                            <div class="col-sm-3" style="display:none;" id="Nameval">
                                                <label style="color:red;font-weight:bold;"> Required </label>
                                            </div>

                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Middle Name")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control TextBox", @id = "MiddleName", placeholder = "Middle Name" })
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*Any Chronic Health Issue", new { @class = "required" })</label>
                                            <div class="col-sm-3">
                                                <div class="row">
                                                    <div class="col-xs-6">
                                                        <label>@Html.CheckBoxFor(m => m.HealthIssue, new { @name = "HealthIssue", @id = "HealthIssue" })</label>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("*EMail (School)", new { @class = "required" })</label>
                                            @if (Model.JoiningDate == DateTime.Today)
                                            {
                                                <div class="col-sm-3">
                                                    @Html.TextBoxFor(model => model.EMail, new { @class = "form-control TextBox", @id = "EMail", @type = "email", placeholder = "EMail (School)" })
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="col-sm-3">
                                                    @Html.TextBoxFor(model => model.EMail, new { @class = "form-control TextBox", @id = "EMail", @type = "email", placeholder = "EMail (School)", @readonly = "readonly" })
                                                </div>
                                            }
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Personal EMail")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.EMailPersonal, new { id = "EMailPersonal TextBox", @class = "form-control", @type = "email", placeholder = "Personal EMail" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("*Mobile Number", new { @class = "required" })</label>
                                            @if (Model.JoiningDate == DateTime.Today)
                                            {
                                                <div class="col-sm-3">
                                                    @Html.TextBoxFor(model => model.MobileNumber, new { @class = "form-control txtboxNum", maxlength = "10", id = "MobileNo", placeholder = "Mobile Number" })
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="col-sm-3">
                                                    @Html.TextBoxFor(model => model.MobileNumber, new { @class = "form-control txtboxNum", maxlength = "10", id = "MobileNo", placeholder = "Mobile Number", @readonly = "readonly" })
                                                </div>
                                            }
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Alternate Contact No")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.AlternateContact, new { @class = "form-control txtboxNum", maxlength = "10", id = "AlternateMobileNumber", placeholder = "Alternate Contact No" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Height(cm)", new { })</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.Height, new { @class = "form-control txtboxNum", maxlength = "10", id = "Height", placeholder = "Height" })
                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Weight(kg)")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.Weight, new { @class = "form-control txtboxNum", maxlength = "10", id = "Weight", placeholder = "Weight" })
                                            </div>
                                        </div>

                                        <div class="form-group" style="margin-bottom:5px;">
                                            <div class="col-sm-12">
                                                <label class="col-sm-2 control-label no-padding-right" for="form-field-1" style="margin-left:-15px;">@Html.Label("*Date of Birth", new { @class = "required" })</label>
                                              
                                                <div class="col-sm-3" style="margin-left:10px;">

                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <div id="datepicker1" class="input-group date">
                                                                @if ((null == Model) || (!Model.DateofBirth.HasValue))
                                                                {
                                                                    <input class="form-control" type="text" id="DateofBirth" name="DateofBirth" autocomplete="off" placeholder="Date of Birth" />
                                                                    <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                                }
                                                                else
                                                                {
                                                                    if (Model.DateofBirth.HasValue)
                                                                    {
                                                                        <input class="form-control" type="text" id="DateofBirth" name="DateofBirth" autocomplete="off" placeholder="Date of Birth" value="@Model.DateofBirth.Value.ToShortDateString()" />
                                                                        <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                                    }
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>


                                                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*Gender", new { @class = "required" })</label>
                                                <div class="col-sm-3">
                                                    <div class="row">
                                                        <div class="col-xs-6">
                                                            <label>@Html.RadioButtonFor(m => m.Gender, 0, new { @name = "Male", @id = "Male", @checked = "checked" }) Male@*<input type="radio" value="0" name="Gender" />Male*@</label>
                                                        </div>
                                                        <div class="col-xs-6">
                                                            <label>@Html.RadioButtonFor(m => m.Gender, 1, new { @name = "Female", @id = "Female" }) Female</label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Caste")</label>

                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.Caste, new SelectList(Model.lstCaste, "CasteId", "CasteName", 0), new { @class = "form-control", id = "Caste" })
                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Short Name")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.Alias, new { @class = "form-control TextBox", placeholder = "Short Name", @id = "Alias" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>




            <!--Qualification Information-->

            <div class="row">
                <div class="col-xs-12">

                    <div class="widget-box">
                        <div class="widget-header widget-header-flat widget-header-small">
                            <h5 class="widget-title">
                                Qualification Information
                            </h5>
                        </div>
                        <div class="widget-body">
                            <div class="widget-main">
                                <div class="row">
                                    <div class="col-xs-12">

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("10th Marks(%)")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.SSCMarks, new { @class = "form-control TextBox", id = "SSCMarks", placeholder = "SSC Marks" })


                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("10th Year Of Pass", new { })</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.SSCYearOfPass, new { @class = "form-control TextBox", id = "SSCYearOfPass", placeholder = "SSC Year Of Pass" })

                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("+2 Marks(%)")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.InterMarks, new { @class = "form-control TextBox", id = "InterMarks", placeholder = "+2 Marks" })


                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("SSC Year Of Pass", new { })</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.InterYearOfPass, new { @class = "form-control TextBox", id = "InterYearOfPass", placeholder = "+2 Year Of Pass" })

                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Degree Marks(%)")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.DegreeMarks, new { @class = "form-control TextBox", id = "DegreeMarks", placeholder = "+2 Marks" })


                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Degree Year Of Pass")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.DegreeYearOfPass, new { @class = "form-control TextBox", id = "DegreeYearOfPass", placeholder = "Degree Year Of Pass" })

                                            </div>
                                        </div>


                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("PG Marks(%)")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.PostDegreeMarks, new { @class = "form-control TextBox", id = "PostDegreeMarks", placeholder = "Post Graduation Marks" })


                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("PG Year Of Pass", new { })</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.PostDegreeYearOfPass, new { @class = "form-control TextBox", id = "PostDegreeYearOfPass", placeholder = "Post Graduation Year Of Pass" })

                                            </div>
                                        </div>




                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("*Qualification", new { @class = "required" })</label>

                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.QualificationId, new SelectList(Model.lstQualifications, "QualificationsId", "Name", 0), new { @class = "form-control", id = "QualificationsId" })
                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*ADDL Qualification", new { @class = "required" })</label>

                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.AdditionalQualificationId, new SelectList(Model.lstAdditionalQualifications, "QualificationsId", "Name", 0), new { @class = "form-control", id = "AdditionalQualificationsId" })
                                            </div>
                                        </div>




                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Job Title")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.JobTitle, new { @class = "form-control TextBox", placeholder = "Job Title" })
                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*Department", new { @class = "required" })</label>
                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.DepartmentId, new SelectList(Model.lstDepartments, "DepartmentId", "DepartmentName", 0), new { @class = "form-control", id = "DepartmentId" })
                                            </div>



                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("*Designation", new { @class = "required" })</label>
                                            <div class="col-sm-3">
                                                @if (Model.IsProfile == true)
                                                {
                                                    @Html.DropDownListFor(model => model.PositionId, new SelectList(Model.lstEmployeePosition, "EmployeePositionId", "PositionName", 0), new { @class = "form-control", id = "PositionId", disabled = "disabled" })

                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(model => model.PositionId, new SelectList(Model.lstEmployeePosition, "EmployeePositionId", "PositionName", 0), new { @class = "form-control", id = "PositionId" })

                                                }
                                            </div>
                                            <div class="col-sm-3" ></div>
                                            <div class="col-sm-4">
                                                <label class="col-sm-4 control-label no-padding-right" for="form-field-1">@Html.Label("BEd/TTC/DEd", new { })</label>
                                                <div class="col-sm-3">
                                                    <div class="row">
                                                        <div class="col-xs-3">
                                                            <label>@Html.CheckBoxFor(m => m.IsQualified, new { @name = "IsQualified", @id = "IsQualified" })</label>
                                                        </div>

                                                    </div>
                                                </div>
                                                <label class="col-sm-1 control-label no-padding-right" for="form-field-1">@Html.Label("TET", new { })</label>
                                                <div class="col-sm-1">
                                                    <div class="row">
                                                        <div class="col-xs-2">
                                                            <label>@Html.CheckBoxFor(m => m.TET, new { @name = "TET", @id = "TET" })</label>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                     

                                        <div class="form-group" style="margin-top:5px;margin-bottom:5px;">

                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Classes can Handle")</label>
                                            <div class="col-sm-3">
                                                @if (Model.IsProfile == true)
                                                {
                                                    @Html.ListBoxFor(model => model.lstClassesCanHandle, new SelectList(Model.lstClassNumbers, "ClassNumber", "ClassNumberDisplay", 0), new { @class = "form-control select2", id = "ClassId", @multiple = "multiple", disabled = "disabled" })

                                                }
                                                else
                                                {
                                                    @Html.ListBoxFor(model => model.lstClassesCanHandle, new SelectList(Model.lstClassNumbers, "ClassNumber", "ClassNumberDisplay", 0), new { @class = "form-control select2", id = "ClassId", @multiple = "multiple" })

                                                }
                                            </div>
                                            <div class="col-xs-1">
                                                @if (Model.IsProfile == false)
                                                {
                                                    <label> <input type="checkbox" id="checkboxClass"> All</label>
                                                }
                                            </div>
                                        </div>

                                        <div class="form-group">

                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Subjects can Teach")</label>
                                            <div class="col-sm-3">
                                                @if (Model.IsProfile == true)
                                                {
                                                    @Html.ListBoxFor(model => model.lstSubjectsCanTeach, new SelectList(Model.lstSubjects, "SubjectName", "SubjectName", 0), new { @class = "form-control select2", id = "SubjectId", @multiple = "multiple", disabled = "disabled" })
                                                }
                                                else
                                                {
                                                    @Html.ListBoxFor(model => model.lstSubjectsCanTeach, new SelectList(Model.lstSubjects, "SubjectName", "SubjectName", 0), new { @class = "form-control select2", id = "SubjectId", @multiple = "multiple" })

                                                }
                                            </div>
                                            <div class="col-xs-1">
                                                @if (Model.IsProfile == false)
                                                {
                                                    <label> <input type="checkbox" id="checkboxSubject"> All</label>
                                                }

                                            </div>
                                        </div>



                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>




                </div>
            </div>


            <div class="row">
                <div class="col-xs-12">
                    <div class="widget-box">
                        <div class="widget-header widget-header-flat widget-header-small">
                            <h5 class="widget-title">
                                Experiance Information
                            </h5>
                        </div>

                        <div class="widget-body">
                            <div class="widget-main">
                                <div class="row">
                                    <div class="col-xs-12">
                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Total Experience")</label>
                                            <div class="col-sm-3">
                                                <div class="row">
                                                    <div class="col-sm-6">
                                                        @Html.DropDownList("Year", new SelectList(Year, "Value", "Text", -1), new { @class = "form-control", id = "Year", name = "ExperianceYr" })
                                                    </div>
                                                    <div class="col-sm-6">
                                                        @Html.DropDownList("Month", new SelectList(Month, "Value", "Text", -1), new { @class = "form-control", id = "Month", name = "ExperianceMnth" })
                                                    </div>
                                                </div>
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Experience Info")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.ExperienceInfo, new { @class = "form-control TextBox", id = "ExperienceInfo", placeholder = "Experience Info" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("School 1")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.School1, new { @class = "form-control TextBox", id = "School1", placeholder = "School 1" })
                                            </div>


                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("School 2")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.School2, new { @class = "form-control TextBox", id = "School2", placeholder = "School 2" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("School 3")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.School3, new { @class = "form-control TextBox", id = "School3", placeholder = "School 3" })
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("School 4")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.School4, new { @class = "form-control TextBox", id = "School4", placeholder = "School 4" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("School 5")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.School5, new { @class = "form-control TextBox", id = "School5", placeholder = "School 5" })
                                            </div>
                                        </div>
                                        @*Changes has to do*@


                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>




   
            <div class="row">
                <div class="col-xs-12">


                    <div class="widget-box">
                        <div class="widget-header widget-header-flat widget-header-small">
                            <h5 class="widget-title">
                                Access Information

                            </h5>
                        </div>
                        <div class="widget-body">
                            <div class="widget-main">
                                <div class="row">
                                    <div class="col-xs-12">
                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("*Access Level", new { @class = "required" })</label>
                                            <div class="col-sm-3">
                                                @if (Model.IsProfile == true)
                                                {
                                                    @Html.DropDownListFor(model => model.DesignationId, new SelectList(Model.lstEmployeeDesignation, "EmployeeDesignationId", "DesignationName", 0), new { @class = "form-control", id = "DesignationId", disabled = "disabled" })
                                                }
                                                else
                                                {
                                                    if (UserRole == "SA" || Model.JoiningDate == DateTime.Today)
                                                    {
                                                        @Html.DropDownListFor(model => model.DesignationId, new SelectList(Model.lstEmployeeDesignation, "EmployeeDesignationId", "DesignationName", 0), new { @class = "form-control", id = "DesignationId" })
                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownListFor(model => model.DesignationId, new SelectList(Model.lstEmployeeDesignation, "EmployeeDesignationId", "DesignationName", 0), new { @class = "form-control", id = "DesignationId", disabled = "disabled" })
                                                        @Html.HiddenFor(model => model.DesignationId)
                                                    }
                                                }
                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("ADDL Access Level")</label>
                                            <div class="col-sm-3">
                                                @if (Model.IsProfile == true)
                                                {
                                                    @Html.DropDownListFor(model => model.AdditionalDesignationId, new SelectList(Model.lstEmployeeDesignation, "EmployeeDesignationId", "DesignationName", 0), new { @class = "form-control", id = "AddtionalDesignationId", disabled = "disabled" })

                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(model => model.AdditionalDesignationId, new SelectList(Model.lstEmployeeDesignation, "EmployeeDesignationId", "DesignationName", 0), new { @class = "form-control", id = "AddtionalDesignationId" })

                                                }
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Reporting Manger Designation")</label>
                                            <div class="col-sm-3">
                                                @if (Model.IsProfile == true)
                                                {
                                                    @Html.DropDownListFor(model => model.ReporitngManagerDesignationId, new SelectList(Model.lstReportingManagerDesignation, "EmployeeDesignationId", "DesignationName"), new { @class = "form-control", id = "ReportingManagerDesignation", disabled = "disabled" })

                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(model => model.ReporitngManagerDesignationId, new SelectList(Model.lstReportingManagerDesignation, "EmployeeDesignationId", "DesignationName"), new { @class = "form-control", id = "ReportingManagerDesignation" })

                                                }
                                                @*<select class="form-control" id="ReportingManagerDesignationId" name="ReportingManagerDesignation"></select>*@
                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*Reporting Manager", new { @class = "required" })</label>
                                            <div class="col-sm-3">
                                                @if (Model.IsProfile == true)
                                                {
                                                    @Html.DropDownListFor(model => model.ReportingManagerId, new SelectList(Model.lstReportingManager, "StaffId", "DisplayName"), new { @class = "form-control", id = "ReportingManagerId", disabled = "disabled" })

                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(model => model.ReportingManagerId, new SelectList(Model.lstReportingManager, "StaffId", "DisplayName"), new { @class = "form-control", id = "ReportingManagerId" })

                                                }
                                                @*<select class="form-control" id="ReportingManager" name="ReportingManager"></select>*@
                                            </div>


                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("*Manager To Manager", new { @class = "required" })</label>
                                            <div class="col-sm-3">
                                                @if (Model.IsProfile == true)
                                                {
                                                    @Html.DropDownListFor(model => model.ManagerToMangerId, new SelectList(Model.lstManagerToManager, "StaffId", "DisplayName"), new { @class = "form-control", id = "ManagerToManagerId", disabled = "disabled" })

                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(model => model.ManagerToMangerId, new SelectList(Model.lstManagerToManager, "StaffId", "DisplayName"), new { @class = "form-control", id = "ManagerToManagerId" })

                                                }
                                                @*<select class="form-control" id="ManagerToManager" name="ManagerToManager"></select>*@
                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*Branch", new { @class = "required" })</label>
                                            <div class="col-sm-3">
                                                @if (Model.IsProfile == true)
                                                {
                                                    @Html.DropDownListFor(model => model.BranchId, new SelectList(Model.lstBranches, "SubscriptionId", "Institute", Model.BranchId), new { @class = "form-control", id = "BranchId", disabled = "disabled" })

                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(model => model.BranchId, new SelectList(Model.lstBranches, "SubscriptionId", "Institute", Model.BranchId), new { @class = "form-control", id = "BranchId", disabled = "disabled" })

                                                }
                                            </div>


                                        </div>
                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Category")</label>
                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.lstCategory, "EmployeeCategoryId", "CategoryName", 0), "--- Select ---", new { @class = "form-control", id = "DepartmentId" })
                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Alias Name")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.Alias, new { @class = "form-control TextBox", placeholder = "Alias Name", @id = "Alias", maxlength = "4" })
                                            </div>

                                        </div>
                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Incharge To")</label>
                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.SectionId, new SelectList(Model.lstSection, "SectionId", "SectionCode"), "--- Select ---", new { @class = "form-control", id = "SectionId" })
                                            </div>
                                        </div>

                                        @if (Model.IsProfile == false)
                                        {
                                            <div class="form-group">

                                                <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Branches can Access")</label>

                                                @if (UserRole == "SA" || Model.JoiningDate == DateTime.Today)
                                                {
                                                    <div class="col-sm-3">
                                                        @Html.ListBoxFor(model => model.ListSelectedSubscriptions, new SelectList(Model.ListAccessibleBranches, "DataBaseName", "Institute", 0), new { @class = "form-control select2", id = "SubscriptionId", @multiple = "multiple" })
                                                    </div>
                                                    <div class="col-xs-1">
                                                        <label> <input type="checkbox" id="checkboxBranch"> All</label>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="col-sm-3">
                                                        @Html.ListBoxFor(model => model.ListSelectedSubscriptions, new SelectList(Model.ListAccessibleBranches, "DataBaseName", "Institute", 0), new { @class = "form-control select2", id = "SubscriptionId", @multiple = "multiple", disabled = "disabled" })
                                                    </div>

                                                    if (Model.ListSelectedSubscriptions != null)
                                                    {
                                                        for (int i = 0; i < Model.ListSelectedSubscriptions.Count; i++)
                                                        {
                                                            @Html.HiddenFor(model => Model.ListSelectedSubscriptions[i])
                                                        }
                                                    }
                                                }


                                            </div>
                                        }
                                        else
                                        {
                                            <div class="form-group">

                                                <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Branches can Access")</label>
                                                <div class="col-sm-9">
                                                    @Html.ListBoxFor(model => model.ListSelectedSubscriptions, new SelectList(Model.ListAccessibleBranches, "DataBaseName", "Institute", 0), new { @class = "form-control select2", id = "SubscriptionId", @multiple = "multiple", disabled = "disabled" })
                                                </div>

                                            </div>
                                        }


                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>

            <!--Personal Information-->
            <div class="row">
                <div class="col-xs-12">

                    <div class="widget-box">
                        <div class="widget-header widget-header-flat widget-header-small">
                            <h5 class="widget-title">
                                Personal Information

                            </h5>
                        </div>
                        <div class="widget-body">
                            <div class="widget-main">
                                <div class="row">
                                    <div class="col-xs-12">

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Marital Status")</label>
                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.MaritalStatusId, new SelectList(MaritalStatus, "Value", "Text", 0), new { @class = "form-control", id = "MaritalStatusId" })
                                                @*@Html.DropDownList("MaritalStatusId", new SelectList(MaritalStatusId, "Value", "Text", new { @class = "form-control", name = "MaritalStatus" }))*@

                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Blood Group")</label>

                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.BloodGroupId, new SelectList(Model.lstBloodGroup, "BloodGroupId", "BloodGroupName", 0), "--- Select ---", new { @class = "form-control", id = "BloodGroupId" })
                                                @*<select class="form-control" id="BloodGroupId" name="BloodGroupId"></select>*@
                                            </div>
                                        </div>



                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("*Father's Name", new { @class = "required" })</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.FatherName, new { @class = "form-control TextBox", id = "FatherName", placeholder = "Father's Name" })
                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*Mother's Name", new { @class = "required" })</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.MotherName, new { @class = "form-control TextBox", id = "MotherName", placeholder = "Mother's Name" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("*Important Date", new { @class = "required" })</label>
                                            <div class="col-sm-3">
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div id="datepicker2" class="input-group date">
                                                            @if (Model.ImportantDate.HasValue)
                                                            {
                                                                <input class="form-control" type="text" id="ImportantDate" name="ImportantDate" value="@Model.ImportantDate.Value.ToShortDateString()" autocomplete="off" placeholder="Important Date" />
                                                            }
                                                            else
                                                            {
                                                                <input class="form-control" type="text" id="ImportantDate" name="ImportantDate" autocomplete="off" placeholder="Important Date" />
                                                            }
                                                            <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*Aadhar Card Number", new { @class = "required" })</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.AadharCardNumber, new { @class = "form-control txtboxNum", id = "AadharNumber", maxlength = "12", placeholder = "Aadhar Card Number" })
                                            </div>


                                        </div>


                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Driving License No")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.LicenceNumber, new { @class = "form-control", placeholder = "Driving License Number", @maxlength = "18" })
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("PAN Card Number")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.PANCardNumber, new { @class = "form-control", placeholder = "PAN Card Number", @maxlength = "10" })
                                            </div>

                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Vehicle No")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.VehicleNo, new { @class = "form-control", placeholder = "Vehicle No" })
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Identification Marks")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.IdentificationMarks, new { @class = "form-control", placeholder = "Identification Marks", @maxlength = "200" })
                                            </div>

                                        </div>


                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Hobbies")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.Hobbies, new { @class = "form-control", placeholder = "Hobbies", @maxlength = "18" })
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Achievements")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.Achievements, new { @class = "form-control", placeholder = "Achievements", @maxlength = "10" })
                                            </div>

                                        </div>
                                        @if (null != @ViewBag.ImageData)
                                        {
                                            <div class="form-group">
                                                <div>
                                                    <label class="col-sm-2 control-label">@Html.Label("Staff Photo")</label>
                                                    <input type="file" name="stPhoto" id="1" accept="image/x-png, image/jpeg" onchange="readURL(this, 1);" class="choose" />
                                                    <img class="col-sm-2 control-label no-padding-right" id="Simage" src="@ViewBag.ImageData" alt="your image" width="100" height="100" />
                                              
                                                    <input type="hidden" id="photo" name="stPhoto" />
                                                </div>
                                            </div>
                                        }
                                        else
                                        {

                                            <div class="col-sm-6">
                                                <label class="col-sm-5 control-label no-padding-right required" for="form-field-1">*Photo</label>
                                                <div class="col-sm-6">
                                                    <img class="col-sm-6 control-label no-padding-right" id="image1" width="100" height="100" src="/Content/images/NoPhoto.jpg" /><br />
                                                    <input type="file" name="stPhoto" id="stPhoto" accept="image/x-png, image/jpeg" onchange="readURL(this, 1);" />
                                                    <input type="hidden" id="photo" name="stPhoto" />
                                                </div>
                                            </div>
                                        }

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

            <!--Contact Information-->
            <div class="row">
                <div class="col-xs-12">

                    <div class="widget-box">
                        <div class="widget-header widget-header-flat widget-header-small">
                            <h5 class="widget-title">
                                Contact Information

                            </h5>
                        </div>
                        <div class="widget-body">
                            <div class="widget-main">
                                <div class="row">
                                    <div class="col-xs-12">
                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("*Address Line One", new { @class = "required" })</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.AddressLineOne, new { @class = "form-control TextBox", id = "Address1", placeholder = "Address Line One" })
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Address Line Two")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.AddressLineTwo, new { @class = "form-control TextBox", placeholder = "Address Line Two" })
                                            </div>

                                        </div>


                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("*Country", new { @class = "required" })</label>

                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.CountryId, new SelectList(Model.lstNationalities, "NationalityId", "CountryName", "75"), new { @class = "form-control", id = "CountryId" })
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*State", new { @class = "required" })</label>

                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.StateId, new SelectList(Model.lstStates, "StateId", "StateName", 0), new { @class = "form-control", id = "StateId" })
                                            </div>

                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("*City", new { @class = "required" })</label>

                                            <div class="col-sm-3">
                                                @*@Html.TextBoxFor(model => model.City, new { @class = "form-control TextBox", placeholder = "City", id = "txtCity" })*@
                                                <input type="hidden" id="selcity" value="@Model.City" />
                                                <select id="txtCity" name="City" class="form-control"></select>
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("PIN Code")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.PINCode, new { id = "PINCode", @class = "form-control", placeholder = "PIN Code", @maxlength = "6" })
                                            </div>

                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("*Nationality", new { @class = "required" })</label>

                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.NationalityId, new SelectList(Model.lstNationalities, "NationalityId", "Nationality1", 75), "--- Select ---", new { @class = "form-control", id = "NationalityId" })
                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*Religion", new { @class = "required" })</label>

                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.ReligionId, new SelectList(Model.lstReligions, "ReligionId", "ReligionName", 0), new { @class = "form-control", id = "ReligionId" })
                                                @*<select class="form-control" id="NationalityId" name="Nationality"></select>*@

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!--Bank Information-->
            <div class="row">
                <div class="col-xs-12">

                    <div class="widget-box">
                        <div class="widget-header widget-header-flat widget-header-small">
                            <h5 class="widget-title">
                                Bank Details
                            </h5>
                        </div>
                        <div class="widget-body">
                            <div class="widget-main">

                                <div class="row">
                                    <div class="col-xs-12">
                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Bank Name")</label>

                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.BankId, new SelectList(Model.lstBanks, "BankId", "BankName", 0), new { @class = "form-control", id = "BankId" })
                                                @*<select class="form-control" id="BankId" name="BankId"></select>*@

                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Branch Name")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.BranchName, new { @class = "form-control TextBox", placeholder = "Branch Name" })
                                            </div>

                                        </div>


                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Account Number")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.AccountNo, new { id = "AccountNo", @class = "form-control", placeholder = "Account Number", @maxlength = "20" })
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Branch ESI Code")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.BranchESICode, new { id = "BranchESICode", @class = "form-control TextBox", placeholder = "Branch ESI Code" })
                                            </div>

                                        </div>
                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("IFSC Code")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.IFSCCode, new { id = "IFSCCode", @class = "form-control TextBox", placeholder = "IFSC Code" })
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("ESI Code")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.ESICode, new { id = "ESICode", @class = "form-control TextBox", placeholder = "ESI Code" })
                                            </div>
                                        </div>


                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

            <!--Spouse Details-->
            <div class="row" id="SpouseDet" style="display:none">
                <div class="col-xs-12">

                    <div class="widget-box">
                        <div class="widget-header widget-header-flat widget-header-small">
                            <h5 class="widget-title">
                                Spouse Details
                            </h5>
                        </div>
                        <div class="widget-body">
                            <div class="widget-main">
                                <div class="row">
                                    <div class="col-xs-12">

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Name of Spouse")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.SpouseName, new { @class = "form-control TextBox", placeholder = "Name of Spouse" })
                                            </div>

                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Spouse DOB", new { })</label>
                                            <div class="col-sm-3">
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div id="datepicker" class="input-group date">
                                                            @if (Model.SpouseDOB.HasValue)
                                                            {
                                                                <input class="form-control" type="text" id="SpouseDOB" name="SpouseDOB" value="@Model.SpouseDOB.Value.ToShortDateString()" autocomplete="off" placeholder="Important Date" />
                                                            }
                                                            else
                                                            {
                                                                <input class="form-control" type="text" id="SpouseDOB" name="SpouseDOB" autocomplete="off" placeholder="Spouse DOB" />
                                                            }
                                                            <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>




                                        </div>


                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Child 1")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.ChildOne, new { id = "ChildOne", @class = "form-control TextBox", placeholder = "Child 1" })
                                            </div>

                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Child 1 DOB")</label>
                                            <div class="col-sm-3">
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div id="datepicker" class="input-group date">
                                                            @if (Model.ChildOneDOB.HasValue)
                                                            {
                                                                <input class="form-control" type="text" id="ChildOneDOB" name="ChildOneDOB" value="@Model.ChildOneDOB.Value.ToShortDateString()" autocomplete="off" placeholder="Child 1 DOB" />
                                                            }
                                                            else
                                                            {
                                                                <input class="form-control" type="text" id="ChildOneDOB" name="ChildOneDOB" autocomplete="off" placeholder="Child 1 DOB" />
                                                            }
                                                            <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>



                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Child 2")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.ChildTwo, new { id = "ChildTwo", @class = "form-control TextBox", placeholder = "Child 2" })
                                            </div>

                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Child 2 DOB")</label>
                                            <div class="col-sm-3">
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div id="datepicker" class="input-group date">
                                                            @if (Model.ChildTwoDOB.HasValue)
                                                            {
                                                                <input class="form-control" type="text" id="ChildTwoDOB" name="ChildTwoDOB" value="@Model.ChildTwoDOB.Value.ToShortDateString()" autocomplete="off" placeholder="Child 2 DOB" />
                                                            }
                                                            else
                                                            {
                                                                <input class="form-control" type="text" id="ChildTwoDOB" name="ChildTwoDOB" autocomplete="off" placeholder="Child 2 DOB" />
                                                            }
                                                            <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>


                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Child 3")</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.ChildThree, new { id = "ChildThree", @class = "form-control TextBox", placeholder = "Child 3" })
                                            </div>
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Child 3 DOB")</label>
                                            <div class="col-sm-3">
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div id="datepicker" class="input-group date">
                                                            @if (Model.ChildThreeDOB.HasValue)
                                                            {
                                                                <input class="form-control" type="text" id="ChildThreeDOB" name="ChildThreeDOB" value="@Model.ChildThreeDOB.Value.ToShortDateString() aut off" placeholder="Child 3 DOB" />
                                                            }
                                                            else
                                                            {
                                                                <input class="form-control" type="text" id="ChildThreeDOB" name="ChildThreeDOB" autocomplete="off" placeholder="Child 3 DOB" />
                                                            }
                                                            <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>





                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>







                </div>


            </div>

         
            <div class="row">
                <div class="col-xs-12">

                    <div class="widget-box">
                        <div class="widget-header widget-header-flat widget-header-small">
                            <h5 class="widget-title">
                                Nominee Details
                            </h5>
                        </div>
                        <div class="widget-body">
                            <div class="widget-main">
                                <div class="row">
                                    <div class="col-xs-12">

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("*Nominee Name", new { @class = "required" })</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.NomineeName, new { @class = "form-control TextBox", placeholder = "Nominee Name", id = "NomineeName" })
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("*Relation With Nominee", new { @class = "required" })</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.NomineeReleation, new { @class = "form-control TextBox", placeholder = "Relation With Nominee", id = "NomineeRelation" })
                                            </div>

                                        </div>

                                    </div>
                                    <div class="col-xs-3"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>


            </div>





            <!--Other Details-->
            <div class="row">
                <div class="col-xs-12">

                    <div class="widget-box">
                        <div class="widget-header widget-header-flat widget-header-small">
                            <h5 class="widget-title">
                                Other Details

                            </h5>
                        </div>
                        <div class="widget-body">
                            <div class="widget-main">
                                <div class="row">
                                    <div class="col-xs-12">
                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("PF Number")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.PFNumber, new { @class = "form-control TextBox", placeholder = "PF Number" })

                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("EPF Number")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.EPFNumber, new { @class = "form-control TextBox", placeholder = "EPF Number" })
                                            </div>

                                        </div>


                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Medical Insurance No")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.MedicalInsuranceNumber, new { id = "MedicalInsurance", @class = "form-control TextBox", placeholder = "Medical Insurance" })
                                            </div>

                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Society Name")</label>

                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(model => model.SocietyName, new { id = "SocietyName", @class = "form-control TextBox", placeholder = "Society Name" })
                                            </div>
                                        </div>


                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Employee Type")</label>
                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.EmployeeType, new SelectList(Model.ListEmployeeType, "EmpoyeeTypeId", "EmployeeTypeName"), new { @class = "form-control", id = "EmployeeType" })
                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Date of Enrollment")</label>
                                            <div class="col-sm-3">
                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <div id="datepicker" class="input-group date">
                                                            @if (Model.DateofEnrollment.HasValue)
                                                            {
                                                                <input class="form-control" type="text" id="DateofEnrollment" name="DateofEnrollment" value="@Model.DateofEnrollment.Value.ToShortDateString()" autocomplete="off" placeholder="Date of Enrollment" />
                                                            }
                                                            else
                                                            {
                                                                <input class="form-control" type="text" id="DateofEnrollment" name="DateofEnrollment" autocomplete="off" placeholder="Date of Enrollment" />
                                                            }
                                                            <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>

                                        <div class="form-group">
                                            @*<label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Shift Name")</label>

                                        <div class="col-sm-3">
                                            @Html.TextBoxFor(model => model.ShiftName, new { id = "ShiftName", @class = "form-control TextBox", placeholder = "Shift Name" })
                                        </div>*@

                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-2 control-label no-padding-right" for="form-field-1">@Html.Label("Payroll Code")</label>
                                            <div class="col-sm-3">
                                                @if (Model.IsProfile == false)
                                                {
                                                    @Html.DropDownListFor(model => model.PayrollCode, new SelectList(Model.lstPayrollCodes, "PayrollCategoryCodeNumbersId", "PayrollCategoryCode", 0), new { @class = "form-control", id = "PayrollCategoryCodeNumbersId" })

                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(model => model.PayrollCode, new SelectList(Model.lstPayrollCodes, "PayrollCategoryCodeNumbersId", "PayrollCategoryCode", 0), new { @class = "form-control", id = "PayrollCategoryCodeNumbersId", disabled = "disabled" })

                                                }
                                            </div>
                                            <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Leave Category")</label>
                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(model => model.LeaveCategory, new SelectList(Model.lstLeaveCategories, "LeaveCategoryId", "CategoryName"), "--- Select ---", new { @class = "form-control", id = "LeaveCategory" })
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>


            @*<div class="row">
                <div class="col-xs-12">
                    <div class="table-header">
                        Edit Employee Details
                        <div style="float:right;">
                            <button class="btn btn-info btn-xs P2" name="save" value="Save" type="submit" id="save" onclick="return validateEmpReg();">
                                <i class="ace-icon fa fa-floppy-o bigger-180"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>

    }
    <input type="hidden" id="count" name="count" value="0" />
</section>
<script>

    $(".select2").select2();

    var MaritalStatus = $("#MaritalStatusId").val()

    if (MaritalStatus > 1) {
        document.getElementById("SpouseDet").style.display = "inline"
    }

    $("#MaritalStatusId").change(function () {
        alert("kjfghkjfh")
        var MaritalStatus = $("#MaritalStatusId").val()

        if (MaritalStatus > 1) {
            document.getElementById("SpouseDet").style.display = "inline"
        }
        else {
            document.getElementById("SpouseDet").style.display = "none"

        }

    })

    $("#checkboxClass").click(function () {
        if ($("#checkboxClass").is(':checked')) {
            $("#ClassId > option").prop("selected", "selected");
            $("#ClassId").trigger("change");
        } else {
            $("#ClassId > option").removeAttr("selected");
            $("#ClassId").trigger("change");
        }
    });

    $("#checkboxSubject").click(function () {
        if ($("#checkboxSubject").is(':checked')) {
            $("#SubjectId > option").prop("selected", "selected");
            $("#SubjectId").trigger("change");
        } else {
            $("#SubjectId > option").removeAttr("selected");
            $("#SubjectId").trigger("change");
        }
    });

    $("#checkboxBranch").click(function () {
        if ($("#checkboxBranch").is(':checked')) {
            $("#SubscriptionId > option").prop("selected", "selected");
            $("#SubscriptionId").trigger("change");
        } else {
            $("#SubscriptionId > option").removeAttr("selected");
            $("#SubscriptionId").trigger("change");
        }
    });

</script>

<script>

    $('#DesignationId').change(function () {
        var DesignationId = $('#DesignationId').val();
        if (DesignationId > 0) {
            $.ajax({
                url: '/HREnrollment/GetReportingManagerDesignations',
                data: { nDesignationId: DesignationId },
                success: function (data) {
                    $('#ReportingManagerDesignation').html("");
                    $('#ReportingManagerId').html("");
                    $('#ManagerToMangerId').html("");
                    var ManagersList = $('#ReportingManagerDesignation');
                    ManagersList.children().remove();
                    ManagersList.append($("<option>").val("0").text("--- Select ---"));
                    $.each(data, function (i, record) {
                        ManagersList.append($("<option>").val(record.EmployeeDesignationId).text(record.DesignationName));
                    });
                    $('#ReportingManagerDesignation').append(ManagersList);
                },
                aync: false
            });
        }
        else {
            $('#ReportingManagerDesignation').html("");
            $('#ReportingManagerId').html("");
            $('#ManagerToMangerId').html("");
        }
    });

    $('#ReportingManagerDesignation').change(function () {
        var DesignationId = $('#ReportingManagerDesignation').val();
        var nSubscriptionId = $('#BranchId').val();
        if (DesignationId != 0) {
            $.ajax({
                url: '/HREnrollment/GetReportingManagerByDesignationId',
                data: { DesignationId: DesignationId },
                success: function (data) {
                    var ReportingManagersList = $('#ReportingManagerId');
                    ReportingManagersList.children().remove();
                    ReportingManagersList.append($("<option>").val("0").text("--- Select ---"));
                    $.each(data, function (i, record) {
                        ReportingManagersList.append($("<option>").val(record.StaffId).text(record.DisplayName));
                    });
                    $('#ReportingManagerId').append(ReportingManagersList);
                },
                aync: false
            });
        }
        else {
            $('#ReportingManagerId').html("");
            $('#ManagerToMangerId').html("");
        }
    });


    $('#ReportingManagerId').change(function () {

        var ReportingManagerStaffId = $('#ReportingManagerId').val();
        var nSubscriptionId = $('#BranchId').val();

        if (ReportingManagerStaffId != 0) {
            $.ajax({
                url: '/HREnrollment/GetManagerByReportingManagerId',
                data: { ReportingManagerStaffId: ReportingManagerStaffId },
                success: function (data) {
                    var ManagersList = $('#ManagerToManagerId');
                    ManagersList.children().remove();
                    $.each(data, function (i, record) {
                        ManagersList.append($("<option>").val(record.StaffId).text(record.DisplayName));
                    });

                    $('#ManagerToMangerId').append(ManagersList);
                },
                aync: false
            });
        }
        else {
            $('#ManagerToMangerId').html("");

        }
    });

    function readURL(input, number) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#image' + number)
                    .attr('src', e.target.result)
            };
            reader.readAsDataURL(input.files[0]);
        }
    }



    $('#save').click(function () {
        debugger

        //var validatestatus = validateEmpReg();
        //if (validatestatus == false) {
        //    return false;
        //} else {
        //    return true;
        //}

        return true;
    });


    function validateEmpReg() {
        var message = "";
        var Validate = true;
        var FirstName = $("#FirstName").val();
        var MobileNumber = $("#MobileNo").val();
        var FatherName = $("#FatherName").val();
        var EmailId = $("#EMail").val();
        var Qualifications = $("#QualificationsId").val();
        var AdditionalQualifications = $("#AdditionalQualificationsId").val();
        var ClassId = $("#ClassId").val();
        var SubjectId = $("#SubjectId").val();
        var BranchId = $("#BranchId").val();
        var YearOfExperience = $("#ExperienceInYears").val();
        var MonthsOfExperience = $("#ExperienceInMonths").val();
        var UploadedResumes = $("#resumeImages").val();
        var DepartmentId = $("#DepartmentId").val();
        var AlternateMobile = $("#AlternateMobileNumber").val();
        var DateOfBirth = $("#DateofBirth").val();
        var Designation = $("#DesignationId").val();
        var ReportingManager = $("#ReportingManagerId").val();
        var ManagerToManager = $("#ManagerToManagerId").val();
        var MotherName = $("#MotherName").val();
        var AadharNum = $("#AadharNumber").val();
        var AddressLineOne = $("#Address1").val();
        var Country = $("#CountryId").val();
        var State = $("#StateId").val();
        var city = $("#txtCity").val();
        var Nationality = $("#NationalityId").val();
        var Religion = $("#ReligionId").val();
        var NomineeName = $("#NomineeName").val();
        var NomineeRelation = $("#NomineeRelation").val();
        var ImportantDate = $("#ImportantDate").val();

        if (BranchId <= 0 || BranchId == undefined) {
            message += "Branch, ";
            Validate = false;
        }
        if (FirstName == "" || FirstName == undefined) {
            message += "First Name, ";
            Validate = false;
        }

        if (EmailId == "" || EmailId == undefined) {
            message += "Email Id, ";
            Validate = false;
        }

        if (MobileNumber == "" || MobileNumber == undefined) {
            message += "Mobile Number, ";
            Validate = false;
        }
        //if (DateOfBirth == "" || DateOfBirth == undefined) {
        //    message += "Date Of Birth, ";
        //    Validate = false;
        //}

        if (DepartmentId <= 0 || DepartmentId == undefined) {
            message += "Department, ";
            Validate = false;
        }
        if (Designation <= 0 || Designation == undefined) {
            message += "Designation, ";
            Validate = false;
        }
        //if (ReportingManager <= 0 || ReportingManager == undefined) {
        //    message += "ReportingManager, ";
        //    Validate = false;
        //}
        //if (ManagerToManager <= 0 || ManagerToManager == undefined) {
        //    message += "ManagerToManager, ";
        //    Validate = false;
        //}
        //if (Qualifications <= 0 || Qualifications == undefined) {
        //    message += "Qualifications, ";
        //    Validate = false;
        //}
        //if (AdditionalQualifications <= 0 || AdditionalQualifications == undefined) {
        //    message += "Additional Qualifications, ";
        //    Validate = false;
        //}
        ////if (((YearOfExperience == "" || YearOfExperience == undefined || YearOfExperience == 0)) && (MonthsOfExperience == "" || MonthsOfExperience == undefined)) {
        ////    message += "Experience, ";
        ////    Validate = false;
        ////}

        //if (FatherName == "" || FatherName == undefined) {
        //    message += "Father Name, ";
        //    Validate = false;
        //}
        //if (MotherName == "" || MotherName == undefined) {
        //    message += "Mother Name, ";
        //    Validate = false;
        //}

        //if (ImportantDate == "" || ImportantDate == undefined) {
        //    message += "Important Date, ";
        //    Validate = false;
        //}
        //if (AadharNum == "" || AadharNum == undefined) {
        //    message += "Aadhar Card,";
        //    Validate = false;
        //}
        //if (AddressLineOne == "" || AddressLineOne == undefined) {
        //    message += "Address Line One,";
        //    Validate = false;
        //}
        //if (Country <= 0 || Country == undefined) {
        //    message += "Country,";
        //    Validate = false;
        //}
        //if (State <= 0 || State == undefined) {
        //    message += "State,";
        //    Validate = false;
        //}
        //if (city == "" || city == undefined) {
        //    message += "City,";
        //    Validate = false;
        //}
        //if (Nationality <= 0 || Nationality == undefined) {
        //    message += "Nationality,";
        //    Validate = false;
        //}
        //if (Religion <= 0 || Religion == undefined) {
        //    message += "Religion,";
        //    Validate = false;
        //}
        //if (NomineeName == "" || NomineeName == undefined) {
        //    message += "Nominee Name,";
        //    Validate = false;

        //}
        //if (NomineeRelation == "" || NomineeRelation == undefined) {
        //    message += "Nominee Relation,";
        //    Validate = false;
        //}

        if (!Validate)
            document.getElementById("Validation").innerHTML = "Please fill the fields, " + message.slice(0, -1);

        return Validate;
    };

    $('#datepicker1').datepicker({
        'setEndDate': new Date()
    });



	$('#StateId').change(function () {
		debugger
		$('#selcity').val(null);
		LoadCityDrp()
	})

	function LoadCityDrp() {
		var stateid = $('#StateId').val();

		$('#imagemodal').show();
		$.ajax({
			url: "/AFrontOffice/GetCityDrp",
			data: { StateId: stateid },
			success: function (data) {
				$('#imagemodal').hide();
				var CityItems = $('#txtCity');

				CityItems.children().remove();

				CityItems.append($("<option>").val("null").text("--- Select ---"));
				debugger
				$.each(data, function (i, record) {
					CityItems.append($("<option>").val(record.CityName).text(record.CityName));
				});				
				$('#txtCity').append(CityItems);
				if ($('#selcity').val() != null && $('#selcity').val() != "") {
					var selcity= $('#selcity').val();
					$('#txtCity').val(selcity);
				}
			},
			error: function () {
				$('#imagemodal').hide();
			},
		})
	}
	$('#txtCity').change(function()
	{
		$('#selcity').val(null);

	})
    window.onload = OnloadData();
    function OnloadData() {

        $('#datepicker1').datepicker({
            autoclose: true,
        });

        $('#datepicker2').datepicker({
            autoclose: true,
        });

        var today = new Date();
        var lastYear = new Date(today.getFullYear() - 16, today.getMonth(), today.getDate());
        var End = new Date(today.getFullYear() - 70, today.getMonth(), today.getDate());
        $('#datepicker1').datepicker(
            'setEndDate', lastYear
        );
        $('#datepicker1').datepicker(
            'setStartDate', End
        );
        $('#datepicker2').datepicker(
            'setEndDate', lastYear
        );
        $('#datepicker2').datepicker(
            'setStartDate', End
		);
		LoadCityDrp()
    }


</script>