@model List<AsteriskBrowserAL.Models.BalanceStockData>
@{
    int nSno = 1;
}

<div class="hr hr-18 dotted hr-double"></div>

@if (null != Model && Model.Count() > 0)
{
    <div class="table-header">
        Records Found(@Model.Count())
        <div style="float:right;">
            <button name="button" type="submit" class="btn btn-info btn-minier P2" onclick="return SubmitForm()">
                Transfer
            </button>
        </div>
    </div>

    <div style="overflow:auto;height:350px;">

        <table class="table table-striped table-bordered table-hover dynamic-table" id="mytab1" style="font-size:14px;">
            <thead>
                <tr>
                    <th>@("SNo")</th>
                    <th>
                        @Html.DisplayName("Item Name")
                    </th>
                    <th>
                        @Html.DisplayName("SKU Code")
                    </th>
                    <th>
                        @Html.DisplayName("Stock Transport Order")
                    </th>
                    <th>
                        @Html.DisplayName("Transferred Qty")
                    </th>
                    <th>
                        @Html.DisplayName("Balance Qty")
                    </th>
                    <th>
                        @Html.DisplayName("Existing Qty")
                    </th>
                    <th>
                        @Html.DisplayName("Quantity")
                    </th>
                </tr>
            </thead>
            <tbody>


                @for (int i = 0; i < Model.Count(); i++)
                {
                    <tr>
                        @Html.Hidden("lstBalanceStock.Index", (@i))
                        @Html.Hidden("lstBalanceStock[" + @i + "].InventoryBalanceStockId", Model.ElementAt(i).InventoryBalanceStockId)
                        @Html.Hidden("lstBalanceStock[" + @i + "].InventorySubCategoryItemId", Model.ElementAt(i).InventorySubCategoryItemId, new { id = "ItemId" })
                        @Html.Hidden("lstBalanceStock[" + @i + "].ItemName", Model.ElementAt(i).ItemName)
                        @Html.Hidden("lstBalanceStock[" + @i + "].SKUCode", Model.ElementAt(i).SKUCode)
                        @Html.Hidden("lstBalanceStock[" + @i + "].ExistedQuantity", Model.ElementAt(i).ExistedQty, new { @id = "ExistedQty" })
                        @Html.Hidden("lstBalanceStock[" + @i + "].TransferredQuantity", Model.ElementAt(i).TransferredQuantity, new { @id = "TransferredQuantity" })
                        @Html.Hidden("lstBalanceStock[" + @i + "].BalanceQuantity", Model.ElementAt(i).BalanceQuantity, new { @id = "BalanceQuantity" })

                        <td>
                            @(nSno++)
                        </td>
                        <td>
                            @Model.ElementAt(i).ItemName
                        </td>
                        <td>
                            @Model.ElementAt(i).SKUCode
                        </td>
                        <td>
                            @Model.ElementAt(i).DisplayDCNumber
                        </td>
                        <td>
                            @Model.ElementAt(i).TransferredQuantity
                        </td>
                        <td>
                            @Model.ElementAt(i).BalanceQuantity
                        </td>
                        <td>
                            @Model.ElementAt(i).ExistedQty
                        </td>
                        <td>
                            @Html.TextBox("lstBalanceStock[" + @i + "].Quantity", @Model.ElementAt(i).Quantity, new { @class = "form-control textlength txtboxNum", onkeypress = "return isNumberKey(event)", @maxlength = "4", @min = "0", @max = "100000", @id = "Quantity", @style = "width:180px" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @Html.Action("DataTableScripts", "Base", new { IsPaging = false })

}
else
{
    <span style="color:red;font-weight:bold;"> No records found</span>

}


<script>
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
</script>



