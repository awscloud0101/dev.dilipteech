@model AsteriskBrowserAL.Models.ItemModel

@if (null != Model)
{
    if (null != Model.lstItems && Model.lstItems.Count() > 0)
    {
        int nsno = 1;

        <div class="table-header">
            Kit Details

            <div style="float:right">
                <button type="submit" class="btn btn-info btn-minier" onclick="return SubmitForm()">Dispute</button>
            </div>
        </div>
        <div style="overflow:auto;height:350px">
            <table id="tbItems" class="table tbhover table-striped table-responsive table-bordered dynamic-table" style="font-size:14px;">
                <thead>
                    <tr>
                        <th>
                           S.No.
                        </th>
                        <th>
                            @Html.DisplayName("Item Name")
                        </th>
                        <th>
                            @Html.DisplayName("Quantity")
                        </th>

                        @if (null != Model.lstDisputeType)
                        {
                            foreach (var type in Model.lstDisputeType)
                            {
                                <th>
                                    @type.Name
                                </th>
                            }
                        }
                    </tr>
                </thead>
                <tbody>

                    @for (int i = 0; i < Model.lstItems.Count(); i++)
                    {
                        <tr>

                            @Html.Hidden("lstItems.Index", (@i))
                            @Html.Hidden("lstItems[" + @i + "].InventoryTransferItemId", Model.lstItems.ElementAt(i).InventoryTransferItemId, new { id = "InventoryTransferItemId" })
                            @Html.Hidden("lstItems[" + @i + "].Quantity", Model.lstItems.ElementAt(i).Quantity, new { @class = "ReceivedQty" })
                            @Html.Hidden("lstItems[" + @i + "].ItemName", Model.lstItems.ElementAt(i).ItemName, new { @class = "ItemName" })

                            
                            <td>
                                @(nsno++)
                            </td>
                            <td>
                                @Model.lstItems.ElementAt(i).ItemName
                            </td>
                            <td>
                                @Model.lstItems.ElementAt(i).Quantity
                            </td>
                            @if (null != Model.lstDisputeType)
                            {
                                for (int j = 0; j < Model.lstDisputeType.Count(); j++)
                                {
                                    @Html.Hidden("lstItems[" + @i + "].lstInventoryDispute[" + @j + "].DisputeTypeId", Model.lstDisputeType.ElementAt(j).DisputeTypeId, new { id = "DisputeTypeId" })

                                    <td>
                                        @Html.TextBox("lstItems[" + @i + "].lstInventoryDispute[" + @j + "].DisputeQuantity", "", new { @class = "form-control textlength Quantity", onkeypress = "return isNumberKey(event)", @maxlength = "7", @min = "0", @max = "100000", @style = "width:120px" })
                                    </td>
                                }
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <span style="color: red;"><b>No items recieved</b></span>
    }
}
else
{
    <span style="color: red;"><b>No items recieved</b></span>
}

<script>
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
</script>


