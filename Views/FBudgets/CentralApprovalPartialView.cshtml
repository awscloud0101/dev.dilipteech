@model  AsteriskBrowserAL.Models.MoneySpentCorrection
@{
    Layout = null;
    int Sno = 1;
    int RequestType = 0;
    if (Model.lstData.Count() > 0)
    {
        RequestType = Model.lstData.FirstOrDefault().RequestType.GetValueOrDefault();
    }
}
@Html.Action("DataTableScripts", "Base")
@if (null != Model)
{
    if (null != Model.lstData)
    {
        if (Model.lstData.Count() > 0)
        {
            <input type="hidden" id="SelBarnch" value="@Model.BranchId" />
            <input type="hidden" id="SelDivision" value="@Model.BranchId" />
            <span id="DemoValidation" style="color:red;font-weight:bold;display:none"> *Enter Remarks and Amount</span>
            <div class="table-header">
                Records Found(@Model.lstData.Count)
                <div class="widget-toolbar no-border">
                    @if (RequestType == 1)
                    {
                        <div class="inline action-buttons">
                            <a><span class="btn btn-info btn-minier P2" id="Approve" name="Approve" style="margin-bottom:8px;float:right">Approve</span></a>

                            <a><span class="btn btn-info btn-minier P2" id="Reject" name="Reject" style="margin-bottom:8px;float:right">Reject</span></a>
                        </div>
                    }
                </div>
            </div>
            <div class="table-main">

                <table class="table tbhover table-striped table-bordered dynamic-table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayName("Sno")
                            </th>
                            <th>
                                @Html.DisplayName("Branch")
                            </th>
                            <th>
                                @Html.DisplayName("Head Name")
                            </th>
                            <th>
                                @Html.DisplayName("Sub Head Name")
                            </th>
                            <th>
                                @Html.DisplayName("Request Date")
                            </th>
                            <th>
                                @Html.DisplayName("Request Amount")
                            </th>
                            <th>
                                @Html.DisplayName("Request Remarks")
                            </th>
                            <th>
                                @Html.DisplayName("Regular/Special")
                            </th>
                            <th>
                                @Html.DisplayName("Last Month Spent Amount")
                            </th>
                            <th>
                                @Html.DisplayName("Request Process Amount")
                            </th>
                            <th>
                                @Html.DisplayName("Approval Amount")
                            </th>
                            <th>
                                @Html.DisplayName("Approval Remarks")
                            </th>
                            @if (RequestType == 1)
                            {
                                <th>
                                    <input type="checkbox" id="Selectall" />   @Html.DisplayName("Select")
                                </th>
                            }
                            else
                            {
                                <th>

                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.lstData)
                        {
                            <tr>
                                @Html.Hidden("lstData[" + (Sno + 10) + "].NewAmount", item.NewAmount)
                                @Html.Hidden("lstData[" + (Sno + 10) + "].NewPaidTo", item.NewPaidTo)
                                <td>
                                    @Sno
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BranchName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NewSubHeadName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OldSubHeadName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TransactionDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OldAmount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Remarks)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RegularRemarks)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastMonthSpentAmount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RequestProcessAmount)
                                </td>
                                @if (item.RequestType == 1)
                                {
                                    <td>
                                        @Html.TextBox("lstData[" + (Sno + 10) + "].NewAmount", item.RequestProcessAmount, new { @id = "Amount_" + Sno, @name = "Amount", @required = "required", autocomplete = "off", @class = "form-control txtboxNum", onkeypress = "return isNumberKey(event)" })
                                    </td>

                                        <td>
                                            @Html.TextBox("lstData[" + (Sno + 10) + "].NewPaidTo", item.NewPaidTo, new { @id = "Remarks_" + Sno, @name = "Remarks", @required = "required" })
                                        </td>

                                        <td>
                                            @{
                                                string StudentDet = item.PettyCashCorrectionId.ToString() + "-" + @Sno;

                                            }
                                            @Html.CheckBox("lstData[" + (Sno + 10) + "].IsChecked", new { @value = StudentDet, @id = "Check" })
                                        </td>


                                        @*<td>
                                                <button class="btn btn-info btn-minier btn-success" onclick="ChangeStatus(0,@item.PettyCashCorrectionId,@Sno)">Approve</button> &nbsp;
                                                <button class="btn btn-info btn-minier btn-danger" onclick="ChangeStatus(2,@item.PettyCashCorrectionId,@Sno)">Reject</button>
                                            </td>*@
                                                }
                                                else if (item.RequestType == 0)
                                                {
                                                    <td>
                                                        @Html.TextBox("lstData[" + (Sno + 10) + "].", item.NewAmount, new { @id = "Amount_" + Sno, @name = "Amount", @required = "required", autocomplete = "off", @class = "form-control txtboxNum", onkeypress = "return isNumberKey(event)" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBox("lstData[" + (Sno + 10) + "].", item.NewPaidTo, new { @id = "Remarks_" + Sno, @name = "Remarks", @required = "required" })
                                                    </td>

                                                    <td>
                                                        <button class="btn btn-info btn-minier btn-success" onclick="ChangeStatus(0,@item.PettyCashCorrectionId,@Sno)">Edit</button>
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.NewAmount)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.NewPaidTo)
                                                    </td>
                                                    <td></td>
                                                }


                            </tr>
                                                    Sno++;
                                                }
                    </tbody>
                </table>

            </div>   }
                                                else
                                                {
                                                    <span style="color: red;"><b>Data is not available</b></span>   }
                                                    }
                                                }


<script>
    $('.Remarks').focus(function () {
        $('#DemoValidation').hide()
    })
    $('.Amount').focus(function () {
        $('#DemoValidation1').hide()
    })
    function ChangeStatus(Status, BudgetRequestId, Id) {
        debugger
        var Remark = $('#Remarks_' + Id).val();
        var Amount = $('#Amount_' + Id).val();
        if (Remark != "" && Amount != "") {
            $.ajax({
                url: '/FBudgets/ApproveStatus',
                data: { ChangeStatus: Status, BudgetRequestId: BudgetRequestId, Remark: Remark, Amount: Amount },
                success: function (data) {
                    if (data == "True") {
                        var DivisionId = $('#DivisionId').val()
                        var BranchId = $('#BranchId').val()
                        var CboStatus = $('#CboStatus').val()
                        GetData(DivisionId, BranchId, CboStatus)
                    }
                    //else {
                    //    $('#DemoValidation').show()
                    //}
                    //Popup(data)
                }
            })
        }
        else {
            $('#DemoValidation').show()
        }
    }

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode

        if (charCode == 46 || charCode == 65)
            return true;

        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    $('#Selectall').change(function () {
        if ($(this).prop('checked')) {
            $('tbody tr td #Check').each(function () {
                $(this).prop('checked', true);
            });
        } else {
            $('tbody tr td #Check').each(function () {
                $(this).prop('checked', false);
            });
        }
    });


    $("#Approve").click(function () {
        debugger
        var Ids = " ";
        var result = $('#Check:checked');
        $.each(result, function (i, result) {
            var splits = result.value.split("-");
            var Amount = $('#Amount_' + splits[1]).val();;
            var Remarks = $('#Remarks_' + splits[1]).val();
            Ids += splits[0] + "-" + Amount + "-" + Remarks + ",";
        });

        if (Ids != "") {
            UpdateRequestStatus(Ids, 0);
        }
    })


    $("#Reject").click(function () {
        var Ids = " ";
        var result = $('#Check:checked');
        $.each(result, function (i, result) {
            var splits = result.value.split("-");
            var Amount = $('#Amount_' + splits[1]).val();;
            var Remarks = $('#Remarks_' + splits[1]).val();
            Ids += splits[0] + "-" + Amount + "-" + Remarks + ",";
        });

        if (Ids != "") {
            UpdateRequestStatus(Ids, 2);
        }
    })



    function UpdateRequestStatus(Ids, IsApproval) {
        var DivisionId = $('#DivisionId').val();
        var branchId = $('#BranchId').val();
        var status = $('#CboStatus').val();
        var MonthYear = $('#MonthYear').val();
        var IsCentral = $("#IsCentral").val();
        if (IsCentral == "False") {
            DivisionId = -1;
            branchId = -1;
        }
        $('#imagemodal').show();
        $.ajax({
            url: '/FBudgets/UpdateApprovalStatus',
            data: { StudentStatusId: Ids, IsApproval: IsApproval, nDivisionId: DivisionId, nBranchId: branchId, nstatus: status, MonthYear: MonthYear },
            success: function (result) {
                $('#imagemodal').hide();
                $('#PartialDivision').html(result);
            }
        })
    }

</script>
