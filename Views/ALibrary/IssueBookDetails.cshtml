@model AsteriskBrowserAL.Models.SearchedBookData

@{
    ViewBag.Title = "Searched Books";
}


@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>*@

<!-- #section:basics/content.breadcrumbs -->
<section class="content-header">
    <ol class="breadcrumb">
        <li>
            <i class="menu-icon fa fa-list"></i>
            Academics
        </li>
        <li>
            <i class=""></i>
            Library
        </li>
        <li class="active">Issue Book</li>
    </ol>
    <!-- /section:basics/content.breadcrumbs -->
</section>

<!-- Include Select2 CSS -->
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/select2/3.5.0/select2.min.css" />

<!-- CSS to make Select2 fit in with Bootstrap 3.x -->
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/select2/3.5.0/select2-bootstrap.min.css" />

<!-- Include Select2 JS -->
<script src="//cdnjs.cloudflare.com/ajax/libs/select2/3.5.0/select2.min.js"></script>


<section class="content">
    <div class="row">
        <div class=col-xs-12>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12">
            @using (Html.BeginForm("IssueBookDetails", "ALibrary", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                <br />
                if (null != TempData["IssueBookD"])
                {
                    <span style="color: red;font-weight:bold" id="allocationBooks">@TempData["IssuebookD"] </span>
                }
                <div style="float:right">
                    <button class="btn btn-success btn-sm" name="IssueBook" id="IssueBook" type="submit" onclick="return validation()">
                        <i class="ace-icon fa fa-check bigger-50"></i>
                        Issue Book
                    </button>

                    &nbsp; &nbsp; &nbsp;
                    <button class="btn btn-sm" type="reset" onclick="return resetManageBooks();">
                        <i class="ace-icon fa fa-undo bigger-50"></i>
                        Reset
                    </button>
                </div>
                <div class="page-header">
                    <h1>
                        Book Issue User Entry
                        <small style="float:right;">
                            @Html.ActionLink("Back To Details ", "IssueBook", new { BookCategoryId = ViewBag.SelectedCategoryId, SectionId = ViewBag.SectionId, ClassId = ViewBag.ClassId })
                        </small>
                    </h1>
                </div><!-- /.page-header -->
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <span style="color: red;">@Html.ValidationMessage("Searched Books")</span>

                @Html.HiddenFor(model => model.BookDetailsId)
                @Html.HiddenFor(model => model.BookCategoryId)
                @Html.HiddenFor(model => model.MasterBookId)
                @Html.HiddenFor(model => model.PublicationId)
                @Html.HiddenFor(model => model.AuthorId)
                    <input type="hidden" value="@Model.ClassId" id="ClassId" name="ClassId" />
                <input type="hidden" value="@Model.SectionId" id="SectionId" />
                <form class="form-horizontal" role="form">
                    <div class="box">
                        <div class="box-body">
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("User Category Name")</label>
                                <div class="col-sm-3">
                                    @Html.DropDownListFor(model => model.UserCategoryId, new SelectList(Model.UserCategoryList, "UserCategoryId", "UserCategoryName"), "-- Select --", new { @class = "form-control", @onChange = "OnChangeUserCategory()" })
                                </div>
                                <div id="vUserCategory" style="display:none;color:red;">*Required</div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("User Class/Department")</label>
                                <div class="col-sm-3" id="classdpr">
                                    <select id="Class" name="Class" class="form-control select2" onchange="LoadStudentBySection(this.value)"> </select>
                                </div>
                                <div class="col-sm-3" id="deptdpr" style="display:none;">
                                    <select id="Department" name="Department" class="form-control select2" onchange="LoadStaffBydepartment(this.value)"> </select>
                                </div>
                                <div id="vClassvDepartment" style="display:none;color:red;">*Required</div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("User")</label>

                                <div class="col-sm-3">
                                    <select id="User" name="User" class="form-control select2"></select>
                                </div>
                                <div id="vUser" style="display:none;color:red;">*Required</div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Issue Date")</label>

                                <div class="col-sm-3">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div id="datepicker" class="input-group date" data-date-format="dd/mm/yyyy">
                                                <input id="IssueDate" class="form-control" type="text" name="IssueDate" value="@DateTime.Today.Date.ToShortDateString()" autocomplete="off" placeholder="Select Date" readonly="readonly" />
                                                <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                            </div>
                                            <div id="vIssueDate" style="display:none;color:red;">*Required</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    @Html.ValidationMessageFor(model => model.IssueDate)
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Return Date")</label>

                                <div class="col-sm-3">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div id="datepicker" class="input-group date" data-date-format="dd/mm/yyyy">
                                                <input class="form-control" type="text" name="ReturnDate" value="@Model.ReturnDate.ToShortDateString()" id="ReturnDate" autocomplete="off" placeholder="Select Date" readonly="readonly" />
                                                <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                            </div>
                                            <div id="vReturnDate" style="display:none;color:red;">*Required</div>
                                            <div id="highdate" style="display:none;color:red;">Retun date must greater than issue date</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Book Name")</label>

                                <div class="col-sm-3">
                                    @Html.TextBoxFor(model => model.MasterBookName, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Author")</label>

                                <div class="col-sm-3">
                                    @Html.TextBoxFor(model => model.Author, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("ISBN")</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(model => model.ISBN, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="hr hr-18 dotted hr-double"></div>
                        </div>
                    </div>
                </form>
            }
        </div>
    </div>
</section>
<script>
    var OnChangeUserCategory = function () {
        $('#allocationBooks').hide();
        $('#vUser').hide();
        $('#vUserCategory').hide();
        $('#vClassvDepartment').hide()
        $("#Department").html(''); $("#Class").html(''); $("#User").html('');
        var nCategoryId = $('#UserCategoryId').val();
        if (nCategoryId == 1) {
            $('#classdpr').show(); $('#deptdpr').hide();
            LoadSections();
        }
        if (nCategoryId == 2) {
            $('#deptdpr').show(); $('#classdpr').hide();
            LoadDepartment();
        }
    }
    var LoadDepartment = function () {
        $("#vClassvDepartment").html('');
        $.ajax({
            url: '/ALibrary/GetDepartments',
            success: function (data) {
                 
                items = "<option value='" + 0 + "'>--- Select ---</option>";
                $.each(data, function (i, data) {
                    items += "<option value='" + data.DepartmentId + "'>" + data.DepartmentName + "</option>";
                });
                $("#Department").html(items);
            }
        })
    }
    var LoadSections = function () {
        $("#vClassvDepartment").html('');
        $.ajax({
            url: '/ALibrary/GetSections',
            success: function (data) {
                items = "<option value='" + 0 + "'>--- Select ---</option>";
                $.each(data, function (i, data) {
                    items += "<option value='" + data.SectionId + "'>" + data.SectionCode + "</option>";
                });
                $("#Class").html(items);
                if (SectionId > 0) {
                    document.getElementById('Class').value = SectionId;
                }
            }
        })
    }
    var LoadStudentBySection = function (SectionId) {
        if (SectionId != 0) {
            $('#vUser').hide();
            $.ajax({
                url: '/ALibrary/GetCatagories_listofdata_Student',
                data: { nsectionid: SectionId },
                success: function (data) {
                    $("#User").html('');
                    items = "<option value='" + 0 + "'>--- Select ---</option>";
                    $.each(data, function (i, data) {
                        items += "<option value='" + data.StudentId + "'>" + data.FirstName + ' ' + data.LastName + '(' + data.AdmissionNumber + ')' + "</option>";
                    });
                    $("#User").html(items);
                }
            })
        }
        else { var items = "<option value='" + 0 + "'>--- Select ---</option>"; $("#User").html(items); }
    }
    var LoadStaffBydepartment = function (DepartmentId) {
        if (DepartmentId != 0) {
            $('#vUser').hide();
            $.ajax({
                url: '/ALibrary/GetCatagories_listofdata_Employee',
                data: { departmentid: DepartmentId },
                success: function (data) {
                    $("#User").html('');
                    items = "<option value='" + 0 + "'>--- Select ---</option>";
                    $.each(data, function (i, data) {
                        items += "<option value='" + data.StaffId + "'>" + data.FirstName + ' ' + data.LastName + '(' + data.EmployeeNumber + ')' + "</option>";
                    });
                    $("#User").html(items);
                }
            })
        }
        else { var items = "<option value='" + 0 + "'>--- Select ---</option>"; $("#User").html(items); }
    }
    var validation = function () {
        var returnData = true;
        var usercategory = $('#UserCategoryId').val();
        var classId = $('#Class').val();
        var departmentId = $('#Department').val();
        var userId = $('#User').val();
        if (usercategory == "0" || usercategory == 0 || usercategory == null || usercategory == "") {
            $('#vUserCategory').show(); $('#vClassvDepartment').show();returnData = false;
        }
        if (usercategory == 1) {
            if (classId == "0" || classId == 0 || classId == null || classId == "") {
                $('#vClassvDepartment').show(); returnData = false;
            }
        }
        if (usercategory == 2) {
            if (departmentId == "0" || departmentId == 0 || departmentId == "" || departmentId == null) {
                $('#vClassvDepartment').show(); returnData = false;
            }
        }
        if (userId == "0" || userId == 0 || userId == null || userId == "") {
            $('#vUser').show(); returnData = false;
        }
        return returnData;
    }
</script>
 

