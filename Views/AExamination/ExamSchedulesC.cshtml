@model AsteriskBrowserAL.Models.ExamShedulesData

@{
    ViewBag.Title = "Create Exam Schedules";
}

@section BreadCrumb{
    <ul class="breadcrumb">
        <li>
            <i class="menu-icon fa fa-graduation-cap"></i>
            Academics
        </li>
        <li>
            <i class=""></i>
            Examinations
        </li>
        <li class="active">Exam Schedules</li>
    </ul><!-- /.breadcrumb -->
}


<!-- Include Select2 CSS -->
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/select2/3.5.0/select2.min.css" />

<!-- CSS to make Select2 fit in with Bootstrap 3.x -->
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/select2/3.5.0/select2-bootstrap.min.css" />

<!-- Include Select2 JS -->
<script src="//cdnjs.cloudflare.com/ajax/libs/select2/3.5.0/select2.min.js"></script>

@Html.Action("DatePickerScripts", "Base")

<section class="content">
    <div class="row">
        @*<div class=col-xs-12>
                <h3>@Html.ActionLink("<< Exam Schedule Details", "ExamSchedules", new { ClassNumber = Model.ClassNumber, TermNumber = Model.TermNumber, SubscriptionId = Model.SubscriptionId }) </h3>
            </div>*@
    </div>

    <div class="row">
        <div class="col-xs-12">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <span style="color:red;" id="Validation"></span>
            <div class="box">
                @using (Html.BeginForm("ExamSchedulesC", "AExamination", FormMethod.Post, new { @class = "form-horizontal" }))
                {

                    @Html.HiddenFor(model => model.ClassNumber)
                    @Html.HiddenFor(model => model.TermNumber)
                    @Html.HiddenFor(model => model.SubscriptionId)

                    <input type="hidden" id="SelSubId" value="@Model.SubscriptionId" />
                    <input type="hidden" id="SelClass" value="@Model.ClassNumber" />
                    <input type="hidden" id="NoOfUTs" value="@Model.NoOfUTs" />
                    <input type="hidden" id="NoOfCTs" value="@Model.NoOfCTs" />

                    <div class="table-header">

                    
                            Exam Schedules
                            <small style="float:right;font-weight:bold;" class="textheader">
                                @Html.ActionLink("Back to details", "ExamSchedules", new { ClassNumber = @Model.ClassNumber, TermNumber = @Model.TermNumber, SubscriptionId = @Model.SubscriptionId })
                            </small>
                      
                    </div>
                    @*<div class="box-header">
                            <h3 class="box-title">Examination Schedules</h3>
                            <br />
                            <br />
                            <button class="btn btn-primary " style="width:80px" type="submit" onclick="return submitForm();">
                                Create
                            </button>
                        </div>*@<!-- /.box-header -->
                <!-- form start -->
                   
                    <div class="widget-box row" style="padding:10px;">

<div class="row">



    <div class="col-sm-6">

        <div class="form-group">
            <label class="col-sm-4 control-label no-padding-right" for="form-field-1">@Html.Label("Exam Code")</label>

            <div class="col-sm-6">
                @Html.TextBoxFor(model => model.ExamCode, new { @class = "form-control textlength", placeholder = "Exam Code", @id = "ExamCode" })
                <span class="" style="color:red;font-weight:bold;" id="ESExamCode">
                </span>

            </div>


        </div>
    </div>



    <div class="col-sm-6">

        <div class="form-group">
            <label class="col-sm-4 control-label no-padding-right" for="form-field-1">@Html.Label("CCE Exam")</label>

            <div class="col-sm-6">
                @Html.DropDownListFor(model => model.CCEExam, new SelectList(Model.lstCCEExam, "CCEExamId", "CCEExamName"), "--- Select ---", new { @class = "form-control", id = "CCEExamId" })
                <span class="" style="color:red;font-weight:bold;" id="ESCCEExam">
                </span>

            </div>

        </div>
    </div>
</div>


                        <div class="row">

                            <div class="col-sm-6">

                                <div class="form-group">
                                    <label class="col-sm-4 control-label no-padding-right" for="form-field-1"></label>

                                    <div class="col-sm-8">
                                        <div class="col-sm-6">
                                            @Html.RadioButtonFor(model => model.TestType, "CT", new { @checked = true, id = "IsCT", name = "CT" })
                                            <span class="lbl bigger-120">CT</span>
                                        </div>
                                        <div class="col-sm-6">
                                            @Html.RadioButtonFor(model => model.TestType, "UT", new { id = "IsUT", name = "UT" })
                                            <span class="lbl bigger-120">UT</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-6">

                                <div class="form-group">
                                    <label class="col-sm-4 control-label no-padding-right" for="form-field-1">@Html.Label("Exam Name")</label>

                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(model => model.ExamName, new { @class = "form-control textlength", @readonly = "readonly", placeholder = "Exam Name", @id = "ExamName" })
                                        <span class="" style="color:red;font-weight:bold;" id="ESExamName">
                                        </span>
                                    
                                    </div>

                                 
                                </div>
                            </div>
                        </div>
                        
                        
                        
                        <div class="row">

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label class="col-sm-4 control-label no-padding-right" for="form-field-1">@Html.Label("Start Date")</label>

                                    <div class="col-sm-6">
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <div id="datepicker" class="input-group date" data-date-format="dd/mm/yyyy">
                                                    <input class="form-control" type="text" name="StartDate" id="StartDate" autocomplete="off" placeholder="Select Start Date" />
                                                    <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                </div>
                                                <span class="" id="ESStartDate" style="color:red;font-weight:bold;">
                                                </span>
                                            </div>
                                        </div>
                                    </div>

                              
                                </div>
                            </div>

                            <div class="col-sm-6">

                                <div class="form-group">
                                    <label class="col-sm-4 control-label no-padding-right" for="form-field-1">@Html.Label("End Date")</label>

                                    <div class="col-sm-6">
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <div id="datepicker" class="input-group date" data-date-format="dd/mm/yyyy">
                                                    <input class="form-control" type="text" name="EndDate" id="EndDate" autocomplete="off" placeholder="Select End Date" />
                                                    <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                </div>

                                                <span class="" id="ESEndDate" style="color:red;font-weight:bold;">
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    

                                </div>
                            </div>
                        </div>
                        

                        

                        

                        

                       
                        <div class=" col-md-9">
                            <div class="hr hr-18 dotted hr-double"></div>
                            <button class="btn btn-success btn-sm" onclick="return submitForm();" type="submit">
                                <i class="ace-icon fa fa-check bigger-50"></i>
                                Save
                            </button>
                            &nbsp; &nbsp; &nbsp;
                            <button class="btn btn-sm" type="reset">
                                <i class="ace-icon fa fa-undo bigger-50"></i>
                                Reset
                            </button>
                        </div>

                        <br />
                    </div>
                }
            </div>

        </div>
    </div>
</section>


<script type="text/javascript">

    function submitForm() {
        var validatestatus = validateES();
        if (validatestatus == false) {
            return false;
        } else {
            return true;
        }
    };

    //$("#checkbox").click(function () {
    //    if ($("#checkbox").is(':checked')) {
    //        $("#ClassId > option").prop("selected", "selected");
    //        $("#ClassId").trigger("change");
    //    } else {
    //        $("#ClassId > option").removeAttr("selected");
    //        $("#ClassId").trigger("change");
    //    }
    //});

    function validateES() {

        var validate = true;

        var ExamName = document.getElementById("ExamName").value;
        var ExamCode = document.getElementById("ExamCode").value;

        @*var ClassId = @Html.Raw(Json.Encode(Model.ClassNumbers));*@

        //alert(ExamName);
        var StartDate = document.getElementById("StartDate").value;
        //alert(StartDate);
        var EndDate = document.getElementById("EndDate").value;
        //alert(EndDate);

        var CCEExam = $('#CCEExamId').val();

        if (CCEExam == "") {
            document.getElementById("ESCCEExam").innerHTML = "Please select CCE exam";
            validate = false;
        }

        if (ExamName == "") {
            document.getElementById("ESExamName").innerHTML = "Please enter exam name";
            validate = false;
        }

        if (ExamCode == "") {
            document.getElementById("ESExamCode").innerHTML = "Please enter exam code";
            validate = false;
        }

        //if (ClassId == "") {
        //    document.getElementById("ESClassId").innerHTML = "Please select classes";
        //    validate = false;
        //}

        if (StartDate == "") {
            document.getElementById("ESStartDate").innerHTML = "Please select start date";
            validate = false;
        }

        if (EndDate == "") {
            document.getElementById("ESEndDate").innerHTML = "Please select end date";
            validate = false;
        }



        if (StartDate != "" && EndDate != "") {
            if (new Date(EndDate).getTime() < new Date(StartDate).getTime()) {
                document.getElementById("ESStartDate").innerHTML = "Start date should be greater than end date";
                validate = false;
            }
        }

        if (validate == true) {
            var status = IsExaminationExisted();
            validate = status;
        }

        return validate;
    };

    function IsExaminationExisted() {
        var Status = true;

        var CCEExam = $('#CCEExamId').val();

        $.ajax({

            url: '/AExamination/IsExamScheduleExisted',
            data: { type: "New", id: 0, ExamName: $('#ExamName').val(), ExamCode: $('#ExamCode').val(), SubId: $('#SelSubId').val(), ClassNumber: $('#SelClass').val(), CCEExamId: CCEExam },
            success: function (Data) {

                if (Data != "") {
                    Status = false;
                    document.getElementById("Validation").innerHTML = Data;
                }
            },
            async: false
        });

        return Status;
    }


    $('#ExamName').focus(function () {
        document.getElementById("ESExamName").innerHTML = "";
        document.getElementById("Validation").innerHTML = "";
    });

    $('#ExamCode').focus(function () {
        document.getElementById("ESExamCode").innerHTML = "";
        document.getElementById("Validation").innerHTML = "";
    });

    $('#StartDate').change(function () {
        document.getElementById("ESStartDate").innerHTML = "";
    });
    //$('#ClassId').change(function () {
    //    document.getElementById("ESClassId").innerHTML = "";
    //});

    $('#EndDate').change(function () {
        document.getElementById("ESEndDate").innerHTML = "";
    });

    $('#CCEExamId').focus(function () {
        document.getElementById("ESCCEExam").innerHTML = "";
    });

    $('#CCEExamId').change(function () {
        debugger

        var CCEExamName = $("#CCEExamId option:selected").text();

        var CCE = $('#CCEExamId').val();

        $('#ExamName').val("");
        $('#Exam').val("");


        if (CCE > 0) {

            if ($("#IsCT").prop("checked")) {

                var NoOfCTs = $('#NoOfCTs').val();

                $('#ExamName').val(CCEExamName + " - " + "CT" + (parseInt(NoOfCTs, 10) + 1))
                $('#Exam').val(CCEExamName + " - " + "CT" + (parseInt(NoOfCTs, 10) + 1))
            }
            else {
                var NoOfUTs = $('#NoOfUTs').val();

                $('#ExamName').val(CCEExamName + " - " + "UT" + (parseInt(NoOfUTs, 10) + 1))
                $('#Exam').val(CCEExamName + " - " + "UT" + (parseInt(NoOfUTs, 10) + 1))
            }
        }
        else {
            $("#IsCT").prop("checked", true);
            OnClick();
        }
    });


    $('#IsUT').click(function () {

        $('#ExamName').val("");
        $('#Exam').val("");

        var CCEExamName = $("#CCEExamId option:selected").text();

        if (CCEExamName != "--- Select ---") {
            document.getElementById("ESExamName").innerHTML = "";
            var NoOfUTs = $('#NoOfUTs').val();
            $('#ExamName').val(CCEExamName + " - " + "UT" + (parseInt(NoOfUTs, 10) + 1))
            $('#Exam').val(CCEExamName + " - " + "UT" + (parseInt(NoOfUTs, 10) + 1))
        }

    });

    $('#IsCT').click(function () {

        OnClick();

    });

    function OnClick() {

        $('#ExamName').val("");
        $('#Exam').val("");

        var CCEExamName = $("#CCEExamId option:selected").text();

        if (CCEExamName != "--- Select ---") {
            document.getElementById("ESExamName").innerHTML = "";
            var NoOfCTs = $('#NoOfCTs').val();

            $('#ExamName').val(CCEExamName + " - " + "CT" + (parseInt(NoOfCTs, 10) + 1))
            $('#Exam').val(CCEExamName + " - " + "CT" + (parseInt(NoOfCTs, 10) + 1))
        }
    }

</script>

