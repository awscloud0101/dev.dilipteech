@model AsteriskBrowserAL.Models.ExaminationPapersViewModel

@{
    ViewBag.Title = "Edit ExaminationPapers";

    @*List<SelectListItem> Hours = new List<SelectListItem>()
        {
            new SelectListItem(){Text = "--Hours--", Value = "-1"},
            new SelectListItem(){Text = "00", Value = "00"},
            new SelectListItem(){Text = "01", Value = "01"},
            new SelectListItem(){Text = "02", Value = "02"},
            new SelectListItem(){Text = "03", Value = "03"},
            new SelectListItem(){Text = "04", Value = "04"},
            new SelectListItem(){Text = "05", Value = "05"},
            new SelectListItem(){Text = "06", Value = "06"},
            new SelectListItem(){Text = "07", Value = "07"},
            new SelectListItem(){Text = "08", Value = "08"},
            new SelectListItem(){Text = "09", Value = "09"},
            new SelectListItem(){Text = "10", Value = "10"},
            new SelectListItem(){Text = "11", Value = "11"},
            new SelectListItem(){Text = "12", Value = "12"},
            new SelectListItem(){Text = "13", Value = "13"},
            new SelectListItem(){Text = "14", Value = "14"},
            new SelectListItem(){Text = "15", Value = "15"},
            new SelectListItem(){Text = "16", Value = "16"},
            new SelectListItem(){Text = "17", Value = "17"},
            new SelectListItem(){Text = "18", Value = "18"},
            new SelectListItem(){Text = "19", Value = "19"},
            new SelectListItem(){Text = "20", Value = "20"},
            new SelectListItem(){Text = "21", Value = "21"},
            new SelectListItem(){Text = "22", Value = "22"},
            new SelectListItem(){Text = "23", Value = "23"}
        };

        List<SelectListItem> Minutes = new List<SelectListItem>()
        {
            new SelectListItem(){Text = "--Minutes--", Value = "-1"},
            new SelectListItem(){Text = "00", Value = "00"},
            new SelectListItem(){Text = "05", Value = "05"},
            new SelectListItem(){Text = "10", Value = "10"},
            new SelectListItem(){Text = "15", Value = "15"},
            new SelectListItem(){Text = "20", Value = "20"},
            new SelectListItem(){Text = "25", Value = "25"},
            new SelectListItem(){Text = "30", Value = "30"},
            new SelectListItem(){Text = "35", Value = "35"},
            new SelectListItem(){Text = "40", Value = "40"},
            new SelectListItem(){Text = "45", Value = "45"},
            new SelectListItem(){Text = "50", Value = "50"},
            new SelectListItem(){Text = "55", Value = "55"},
        };*@
}

@section BreadCrumb{
    <ul class="breadcrumb">
        <li>
            <i class="menu-icon fa fa-graduation-cap"></i>
            Transactions
        </li>
        <li>
            <i class=""></i>
            Examinations
        </li>
        <li class="active">Examination Papers</li>
    </ul><!-- /.breadcrumb -->
}




<section class="content">
   
    <style>
        .input-group.date .input-group-addon {
            cursor: pointer;
            z-index: 223;
            position: relative;
            left: -20px;
        }
    </style>



    <div class="row">
        <div class="col-xs-12">

                <!-- form start -->
                @using (Html.BeginForm("ExaminationPapersE", "AExamination", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                 

                    @Html.ValidationSummary(true)
                    <span style="color: red;">@Html.ValidationMessage("Examination Papers")</span>
                    <span style="color:red;font-weight:bold;" id="Validation"></span>
                    @Html.HiddenFor(model => model.ExaminationPapers.ExaminationPapersId)
                    @Html.HiddenFor(model => model.ExaminationPapers.SubjectId)
                    @Html.HiddenFor(model => model.ClassNumber)
                    @Html.HiddenFor(model => model.TermNumber)


                    <div class="table-header">
                       
                            Examination Papers
                            <small style="float:right;" class="textheader">
                                @Html.ActionLink("Back to details", "ExaminationPapers", new { ClassNumber = Model.ClassNumber, TermNumber = Model.TermNumber })
                            </small>
                 
                    </div><!-- /.page-header -->


                    <input type="hidden" id="id" value="@Model.ExaminationPapers.ExaminationPapersId" />
                    <div class="widget-box row" style="padding:10px">
                        <form class="form-horizontal" role="form">


                            <div class="row">

                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label class="col-sm-6 control-label no-padding-right" for="form-field-1">@Html.Label("Exam")</label>

                                        <div class="col-sm-6">
                                            @Html.DropDownListFor(model => model.ExaminationPapers.ExaminationId, new SelectList(Model.lstExaminations, "ExamId", "ExamCode"), "-- Select --", new { @class = "form-control", @id = "ExaminationId", @style = "width:210px" })
                                            <span class="" style="color:red;font-weight:bold;" id="EPExaminationId">
                                            </span>
                                        </div>




                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label class="col-sm-6 control-label no-padding-right" for="form-field-1">@Html.Label("Subject")</label>


                                        <div class="col-sm-6">
                                            @Html.DropDownListFor(model => model.ExaminationPapers.SubjectId, new SelectList(Model.AllSubjects, "SubjectId", "SubjectName"), "--- Select ---", new { @class = "form-control", id = "SubjectNameAndId", @disabled = "disabled", @style = "width:210px" })
                                            <span class="col-sm-3" style="color:red;font-weight:bold;" id="EPSubjectNameAndId">
                                            </span>

                                        </div>



                                    </div>
                                </div>
                            </div>




                            <div class="row">

                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label class="col-sm-6 control-label no-padding-right" for="form-field-1">@Html.Label("Paper Name")</label>


                                        <div class="col-sm-6">
                                            @Html.TextBoxFor(model => model.ExaminationPapers.PaperName, new { @class = "form-control", placeholder = "Paper Name", @readonly = "readonly", id = "PaperName", @onchange = "removeError()", @style = "width:210px" })

                                            @*<div class="col-sm-3">
                    @Html.ValidationMessageFor(model => model.ExaminationPapers.PaperName)
                </div>*@

                                            <span class="" style="color:red;font-weight:bold;" id="EPPaperName">
                                            </span>
                                        </div>




                                    </div>

                                </div>
                                <div class="col-sm-6">


                                    @if (null == @Model.ExaminationPapers.ExamDate)
                                    {
                                 
                                        <div class="form-group">
                                            <label class="col-sm-6 control-label no-padding-right" for="form-field-1">@Html.Label("Exam Date")</label>

                                            <div class="col-sm-6">
                                                <div id="datepicker" class="input-group date" data-date-format="dd/mm/yyyy">
                                                    <input class="form-control" type="text" style="width:97%" id="ExamDate" name="ExamDate" autocomplete="off" placeholder="Select Date" />
                                                    <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                </div>
                                                <span class="" style="color:red;font-weight:bold;" id="EPExamDate">
                                                </span>
                                            </div>


                                        </div>

                                    }
                                    else
                                    {
                                        <div class="form-group">
                                            <label class="col-sm-6 control-label no-padding-right" for="form-field-1">@Html.Label("Exam Date")</label>

                                            <div class="col-sm-6">
                                                <div id="datepicker" class="input-group date" data-date-format="dd/mm/yyyy">
                                                    <input class="form-control" type="text" style="width:97%" id="ExamDate" name="ExamDate" value="@Model.ExaminationPapers.ExamDate.Value.ToShortDateString()" autocomplete="off" placeholder="Select Date" />
                                                    <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                </div>
                                                <span class="" style="color:red;font-weight:bold;" id="EPExamDate">
                                                </span>
                                            </div>


                                        </div>
                                    }
                                </div>

                            </div>


                          
                            
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label class="col-sm-6 control-label no-padding-right" for="form-field-1">@Html.Label("Max Marks")</label>

                                        <div class="col-sm-6">

                                            @Html.TextBoxFor(model => model.ExaminationPapers.MaxMarks, new { @class = "form-control txtboxNum", placeholder = "Max Marks", id = "MaxMarks", onchange = "removeError()", @style = "width:210px" })
                                            @*<div class="col-sm-3">
                    @Html.ValidationMessageFor(model => model.ExaminationPapers.MaxMarks)
                </div>*@

                                            <span class="c" style="color:red;font-weight:bold;" id="EPMaxMarks">
                                            </span>


                                        </div>



                                    </div>

                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label class="col-sm-6 control-label no-padding-right" for="form-field-1">@Html.Label("Pass Marks")</label>


                                        <div class="col-sm-6">
                                            @Html.TextBoxFor(model => model.ExaminationPapers.PassMarks, new { @class = "form-control txtboxNum", placeholder = "Pass Marks", id = "PassMarks", onchange = "removeError()", @style = "width:210px" })
                                            @*<div class="col-sm-3">
                    @Html.ValidationMessageFor(model => model.ExaminationPapers.PassMarks)
                </div>*@

                                            <span class="" style="color:red;font-weight:bold;" id="EPPassMarks">
                                            </span>

                                        </div>




                                    </div>

                                </div>
                            </div>


                            <div class="row">


                                <div class="col-sm-6">

                                    <div class="form-group">
                                        <label class="col-sm-6 control-label no-padding-right" for="form-field-1">@Html.Label("Duration")</label>


                                        <div class="col-sm-6">
                                            @Html.TextBoxFor(model => model.ExaminationPapers.Duration, new { @class = "form-control txtboxNum", placeholder = "Duration in Min.", id = "Duration", onchange = "removeError()", @style = "width:210px" })
                                            <span class="" style="color:red;font-weight:bold;" id="EPDuration">
                                            </span>

                                        </div>


                                        @*<div class="col-sm-3">
                @Html.ValidationMessageFor(model => model.ExaminationPapers.Duration)
            </div>*@

                                    </div>
                                </div>
                            </div>

                            <div class="col-md-9">
                                <div class="hr hr-18 dotted hr-double"></div>
                                <button class="btn btn-success btn-sm" onclick="return submitForm();" type="submit">
                                    <i class="ace-icon fa fa-check bigger-50"></i>
                                    Submit
                                </button>

                                &nbsp; &nbsp; &nbsp;
                                <button class="btn btn-sm" type="reset">
                                    <i class="ace-icon fa fa-undo bigger-50"></i>
                                    Reset
                                </button>
                            </div>

                            

                            @*<div class="form-group">
                                    <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Start Time")</label>

                                    <div class="col-sm-5">

                                        @if (string.IsNullOrWhiteSpace(Model.ExaminationPapers.StartTime))
                                {
                                            <div class="col-sm-3">
                                                @Html.DropDownList("Hours", new SelectList(Hours, "Value", "Text"), new { @class = "form-control", @style = "width:100px", onchange = "removeError()" })
                                            </div>
                                            <div class="col-sm-3">
                                                @Html.DropDownList("Minutes", new SelectList(Minutes, "Value", "Text"), new { @class = "form-control", @style = "width:100px" })
                                            </div>

                                        }
                                        else
                                        {
                                            <div class="col-sm-3">
                                                @Html.DropDownList("Hours", new SelectList(Hours, "Value", "Text", Model.ExaminationPapers.StartTime.Substring(0, 2)), new { @class = "form-control", @style = "width:100px", onchange = "removeError()" })
                                            </div>
                                            <div class="col-sm-3">
                                                @Html.DropDownList("Minutes", new SelectList(Minutes, "Value", "Text", Model.ExaminationPapers.StartTime.Substring(3, 2)), new { @class = "form-control", @style = "width:100px" })
                                            </div>
                                        }



                                    </div>



                                    <div class="col-sm-3" style="display:none;" id="EPHours">
                                        <label style="color:red;font-weight:bold;">Please select Start time</label>
                                    </div>
                                </div>*@

                            

                            @*<div class="form-group">
                                    <label class="col-sm-3 control-label no-padding-right"></label>

                                    <div class="col-sm-5">
                                        <div class="col-sm-6">
                                            @Html.CheckBoxFor(model => model.ExaminationPapers.IsClosed, new { Name = "IsClosed" })
                                            <input name="IsClosed" type="hidden" value="false" />
                                            <span class="lbl bigger-120">Is Closed</span>
                                        </div>
                                    </div>

                                    <div class="col-sm-3">
                                        @Html.ValidationMessageFor(model => model.ExaminationPapers.IsClosed)
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="col-sm-3 control-label no-padding-right" for="form-field-1">@Html.Label("Status")</label>

                                    <div class="col-sm-5">
                                        <div class="col-sm-6">
                                            @Html.RadioButtonFor(model => model.ExaminationPapers.Status, true)
                                            <span class="lbl bigger-120">Active</span>
                                        </div>
                                    </div>

                                    <div class="col-sm-5">
                                        <div class="col-sm-6">
                                            @Html.RadioButtonFor(model => model.ExaminationPapers.Status, false)
                                            <span class="lbl bigger-120">In-Active</span>
                                        </div>
                                    </div>

                                    <div class="col-sm-3">
                                        @Html.ValidationMessageFor(model => model.ExaminationPapers.Status)
                                    </div>
                                </div>*@


         

                            


                        </form>


                    </div>
                }

        </div>
    </div>

    <input type="hidden" id="OldExaminationId" name="OldExaminationId" value="@Model.ExaminationPapers.ExaminationId" />
    <input type="hidden" id="OldSubjectNameAndId" name="OldSubjectNameAndId" value="@Model.ExaminationPapers.SubjectId" />
    <input type="hidden" id="OldPaperName" name="OldPaperName" value="@Model.ExaminationPapers.PaperName" />
    <input type="hidden" id="OldExamDate" name="OldExamDate" value="@Model.ExaminationPapers.ExamDate.Value.ToShortDateString()" />
    <input type="hidden" id="OldMaxMarks" name="OldMaxMarks" value="@Model.ExaminationPapers.MaxMarks.Value" />
    <input type="hidden" id="OldPassMarks" name="OldPassMarks" value="@Model.ExaminationPapers.PassMarks.Value" />
    @*<input type="hidden" id="OldHours" name="OldHours" value="@Model.ExaminationPapers.StartTime.Substring(0, 2)" />
        <input type="hidden" id="OldMinutes" name="OldMinutes" value="@Model.ExaminationPapers.StartTime.Substring(3, 2)" />*@
    <input type="hidden" id="OldDuration" name="OldDuration" value="@Model.ExaminationPapers.Duration.Value" />
</section>

@Html.Action("DatePickerScripts", "Base", new { IsPaging = false, AllowScroll = true })

<script type="text/javascript">

    $('#ExaminationId').change(function () {
        document.getElementById("EPExaminationId").innerHTML = "";
    })

    $('#SubjectNameAndId').change(function () {
        document.getElementById("EPSubjectNameAndId").innerHTML = "";
    })

    $('#PaperName').focus(function () {
        document.getElementById("EPPaperName").innerHTML = "";
    })

    $('#ExamDate').change(function () {
        document.getElementById("EPExamDate").innerHTML = "";
    })

    $('#MaxMarks').focus(function () {
        document.getElementById("EPMaxMarks").innerHTML = "";
    })

    $('#PassMarks').focus(function () {
        document.getElementById("EPPassMarks").innerHTML = "";
    })

    $('#Duration').focus(function () {
        document.getElementById("EPDuration").innerHTML = "";
    })

    function validateEP() {

        var ExaminationId = $('#ExaminationId').val();
        var SubjectNameAndId = $('#SubjectNameAndId').val();
        var PaperName = document.getElementById("PaperName").value;
        var ExamDate = document.getElementById("ExamDate").value;
        var MaxMarks = document.getElementById("MaxMarks").value;
        var PassMarks = document.getElementById("PassMarks").value;
        //var Hours = document.getElementById("Hours").value;
        var Duration = document.getElementById("Duration").value;
        validate = true;

        if (ExaminationId == "") {
            document.getElementById("EPExaminationId").innerHTML = "Please select exam";
            validate = false;
        }

        if (SubjectNameAndId == "") {
            document.getElementById("EPSubjectNameAndId").innerHTML = "Please select class";
            validate = false;
        }

        if (PaperName == "") {
            document.getElementById("EPPaperName").innerHTML = "Please enter paper name";
            validate = false;
        }

        if (ExamDate == "") {
            document.getElementById("EPExamDate").innerHTML = "Please enter exam date";
            validate = false;
        }

        if (MaxMarks == "") {
            document.getElementById("EPMaxMarks").innerHTML = "Please enter max marks";
            validate = false;
        }

        if (PassMarks == "") {
            document.getElementById("EPPassMarks").innerHTML = "Please enter pass marks";
            validate = false;
        }


        if (MaxMarks != "" && PassMarks != "") {
            if (parseInt(MaxMarks) < parseInt(PassMarks)) {
                document.getElementById("EPPassMarks").innerHTML = "Pass marks should be less than max marks";
                validate = false;
            }
        }

        //if (Hours < 0) {
        //    document.getElementById("EPHours").style.display = "inline";
        //    validate = false;
        //} else {
        //    document.getElementById("EPHours").style.display = "none";
        //}

        if (Duration == "") {
            document.getElementById("EPDuration").innerHTML = "Please enter duration";
            validate = false;
        }

        //if (validate == true) {
        //    var status = IsExaminationPaperExisted();
        //    validate = status;
        //}

        return validate;
    };

    function submitForm() {
        var validatestatus = validateEP();
        if (validatestatus == false) {
            return false;
        } else {
            return true;
        }
    };

    function resetEP() {

        document.getElementById("count").value = "0";
        document.getElementById("EPExaminationId").style.display = "none";
        document.getElementById("EPSubjectNameAndId").style.display = "none";
        document.getElementById("EPPaperName").style.display = "none";
        document.getElementById("EPExamDate").style.display = "none";
        document.getElementById("EPMaxMarks").style.display = "none";
        document.getElementById("EPPassMarks").style.display = "none";
        //document.getElementById("EPHours").style.display = "none";
        document.getElementById("EPDuration").style.display = "none";

        //var res = document.getElementById("OldHours").value;

        document.getElementById("ExaminationId").value = document.getElementById("OldExaminationId").value;
        document.getElementById("SubjectNameAndId").value = document.getElementById("OldSubjectNameAndId").value;
        document.getElementById("PaperName").value = document.getElementById("OldPaperName").value;
        document.getElementById("ExamDate").value = document.getElementById("OldExamDate").value;
        document.getElementById("MaxMarks").value = document.getElementById("OldMaxMarks").value;
        document.getElementById("PassMarks").value = document.getElementById("OldPassMarks").value;
        //document.getElementById("Hours").value = document.getElementById("OldHours").value;
        //document.getElementById("Minutes").value = document.getElementById("OldMinutes").value;
        document.getElementById("Duration").value = document.getElementById("OldDuration").value;

        return false;
    };

    function removeError() {

        var count = document.getElementById("count").value;

        var SubjectNameAndId = document.getElementById("SubjectNameAndId").value;
        var ExaminationId = $('#ExaminationId').val();
        var PaperName = document.getElementById("PaperName").value;
        var ExamDate = document.getElementById("ExamDate").value;
        var MaxMarks = document.getElementById("MaxMarks").value;
        var PassMarks = document.getElementById("PassMarks").value;
        //var Hours = document.getElementById("Hours").value;
        var Duration = document.getElementById("Duration").value;

        if (count != 0) {
            if (SubjectNameAndId != "") {
                document.getElementById("EPSubjectNameAndId").style.display = "none";
            } else {
                document.getElementById("EPSubjectNameAndId").style.display = "inline";
            }

            if (ExaminationId != "") {
                document.getElementById("EPExaminationId").style.display = "none";
            } else {
                document.getElementById("EPExaminationId").style.display = "inline";
            }

            if (PaperName != "") {
                document.getElementById("EPPaperName").style.display = "none";
            } else {
                document.getElementById("EPPaperName").style.display = "inline";
            }

            if (ExamDate != "") {
                document.getElementById("EPExamDate").style.display = "none";
            } else {
                document.getElementById("EPExamDate").style.display = "inline";
            }

            if (MaxMarks != "") {
                document.getElementById("EPMaxMarks").style.display = "none";
            } else {
                document.getElementById("EPMaxMarks").style.display = "inline";
            }

            if (PassMarks != "") {
                document.getElementById("EPPassMarks").style.display = "none";
            } else {
                document.getElementById("EPPassMarks").style.display = "inline";
            }



            //if (Hours != -1) {
            //    document.getElementById("EPHours").style.display = "none";
            //} else {
            //    document.getElementById("EPHours").style.display = "inline";
            //}

            if (Duration != "") {
                document.getElementById("EPDuration").style.display = "none";
            } else {
                document.getElementById("EPDuration").style.display = "inline";
            }

        }
    };

    $('#SubjectNameAndId').change(function () {
        document.getElementById("EPSubjectNameAndId").innerHTML = "";
        var SubName = $("#SubjectNameAndId option:selected").text();

        if (SubName != "--- Select ---") {
            document.getElementById("EPPaperName").innerHTML = "";
            $('#PaperName').val(SubName);
        }
        else
        {
            $('#PaperName').val("");
        }

    });

    function IsExaminationPaperExisted() {
        var Status = true;

            $.ajax({

                url: '/AExamination/IsExamPaperExisted',
                data: { type: "Edit", id: $('#id').val(), ExamDate: $('#ExamDate').val(), Paper1: $('#PaperName').val(), Duration: $('#Duration').val(), SubjectId: $('#SubjectNameAndId').val(), ExamId: $('#ExaminationId').val() },
                success: function (Data) {

                    if (Data != "") {
                        Status = false;
                        document.getElementById("Validation").innerHTML = Data;
                    }

                },
                async: false
            });

        return Status;
    }

</script>